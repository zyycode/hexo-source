{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/README.md","path":"README.md","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1515209121741},{"_id":"source/README.md","hash":"efbc240ae4497308340a31a58d4478aca000c1a3","modified":1515464337347},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1514450038921},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1514450038921},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1514450038921},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1514450038937},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1514450038921},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1514450038937},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1514450038937},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1514450038937},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1514450038937},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1514450038937},{"_id":"themes/next/README.cn.md","hash":"b764aae78ffa561a9a68fdee4c6f21c3ce260fbb","modified":1514450038937},{"_id":"themes/next/README.md","hash":"19d57d39580c798dfdd119024d8c3342431b4ab4","modified":1514450038937},{"_id":"themes/next/_config.yml","hash":"f92944a7ba41c35ae974bc2e8dc271a5fb555ab2","modified":1518159370861},{"_id":"themes/next/bower.json","hash":"47471a8f13528dc4052b746db5b4be2375682173","modified":1514450038937},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1514450038937},{"_id":"themes/next/package.json","hash":"39370e2aadf1f9a7c105edff064c6e47682b3932","modified":1514450038984},{"_id":"source/_posts/Hello-Hexo.md","hash":"db8905e9a662e6fb381e93dcf47bd526db09bf7c","modified":1514714340420},{"_id":"source/_posts/Http-Chapter-1.md","hash":"7c859d905f4a01fd886e9c34e037e81ef669f5e1","modified":1518147569522},{"_id":"source/_posts/Http-Chapter-2.md","hash":"c1b9e9ff02efb0e07f1c885814311db121d3a187","modified":1518147664940},{"_id":"source/_posts/JavaScript.md","hash":"7a79bd2579443470940580cdd316b4ba70015184","modified":1518147586142},{"_id":"source/_posts/Shadowsocks-setup.md","hash":"346e61addd082238ee28b728c2018b084c836c50","modified":1514704502717},{"_id":"source/_posts/Windows-tree.md","hash":"3b1f6bb775bd9a01a7ee6155c88c143bfcbf3de5","modified":1518147658296},{"_id":"source/about/index.md","hash":"2dc5801bb392984b97307eca22d4fbc2dd43ebe2","modified":1517230702706},{"_id":"source/categories/index.md","hash":"45df0a235665288799ced0ac0209c0a8278ce1c3","modified":1515213169808},{"_id":"source/tags/index.md","hash":"ef56c0d1da6fb83384cbe727ca5bbb882cda0a3a","modified":1515213157103},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1514450038893},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1514450038905},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1514449887618},{"_id":"themes/next/.git/index","hash":"8b68584b67378f5d2cb1d565f23de8866dd383a4","modified":1515205006087},{"_id":"themes/next/.git/packed-refs","hash":"879a10b0b97af8d2461152b65841af076b6043fc","modified":1514450038882},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1514450038921},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1514450038921},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1514450038921},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514450038921},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1514450038937},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1514450038937},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1514450038937},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1514450038937},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1514450038937},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1514450038937},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1514450038937},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1514450038937},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1514450038937},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1514450038937},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1514450038937},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1514450038937},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1514450038937},{"_id":"themes/next/languages/zh-Hans.yml","hash":"62dce5da529976c0d2aafa5ac5214ad60ca0e794","modified":1514468027483},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1514450038937},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1514450038937},{"_id":"themes/next/layout/_layout.swig","hash":"def33fa2a3985bf9fd092e93debe257eeb3ed519","modified":1515226886790},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1514450038984},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1514450038984},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1514450038984},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1514450038984},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1514450038984},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1514450038984},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1514450038984},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1514450038984},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1514450038984},{"_id":"themes/next/source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1514471347040},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1514450039170},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1514450039170},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1514450039170},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450039065},{"_id":"source/_posts/Http-Chapter-1/TCP-IP-2.png","hash":"237c458e4a85bfa942daefe30091557be7a6ccbb","modified":1517476635069},{"_id":"source/_posts/Http-Chapter-1/URI.png","hash":"76780a4c48468d18e050d692a4654db2b3727bf2","modified":1517479309289},{"_id":"source/_posts/Hello-Hexo/git-test.png","hash":"07d07601e0313091d19cec4c365a9a0dbff6ed7a","modified":1514705040947},{"_id":"source/_posts/Hello-Hexo/github-create.png","hash":"a489c7600cafcd856ec792f6f4d32e46ffc839c2","modified":1514705031886},{"_id":"source/_posts/Hello-Hexo/github-desktop.png","hash":"9b31dcf2999d121d4b7b1a94033dc3357017f239","modified":1514705010043},{"_id":"source/_posts/Hello-Hexo/github-new.png","hash":"3af382aa17a326c2939a8642201e2690a85e8241","modified":1514704997141},{"_id":"source/_posts/Hello-Hexo/hexo-file.png","hash":"aef8a8b3d9980e4dcd0ae70242f776d4e7cbb65a","modified":1514704985030},{"_id":"source/_posts/Hello-Hexo/hexo-use.png","hash":"11370a2a3d368287f660027358fcaae1363b95ab","modified":1514704954769},{"_id":"source/_posts/Hello-Hexo/node-test.png","hash":"1c8d498f14764ee31834fc98de4d7a842ed3e6ad","modified":1514704934421},{"_id":"source/_posts/Http-Chapter-2/DELETE.png","hash":"3f581d81c54e68dfb949203d63101adb759f1abd","modified":1518090199432},{"_id":"source/_posts/Http-Chapter-2/CONNECT.png","hash":"884f1bf2e9ba2c6e32aacd2af6c1dfa24fd2a56f","modified":1518090718471},{"_id":"source/_posts/Http-Chapter-2/GET.png","hash":"e7016eda8ec8f73dd612f261c7070151a0bd88e7","modified":1518089474167},{"_id":"source/_posts/Http-Chapter-2/HEAD.png","hash":"864f67f01c0b93945238011eca9f01365313dc29","modified":1518090125050},{"_id":"source/_posts/Http-Chapter-2/HTTP-TCP.png","hash":"b8f5058b2c93b9264c993ca9edeb139a6656e223","modified":1518092298177},{"_id":"source/_posts/Http-Chapter-2/POST.png","hash":"af315754ed20572fe73a9a434d384b752159581b","modified":1518089875047},{"_id":"source/_posts/Http-Chapter-2/PUT.png","hash":"bb57a7b5f50062196788be2e2cf5d788cb38ca9a","modified":1518090012065},{"_id":"source/_posts/Http-Chapter-2/TRACE-2.png","hash":"2bfd6c49e69fd129e7d5a0729f00530857bd3359","modified":1518090476286},{"_id":"source/_posts/Http-Chapter-2/answer.png","hash":"bafe1f178c0d809a9d3353ff5fc9de3145712624","modified":1517491714519},{"_id":"source/_posts/Http-Chapter-2/options.png","hash":"7cf8365c4922c45e0966937439542ca5257c8f90","modified":1518090301234},{"_id":"source/_posts/Http-Chapter-2/request-URI-2.png","hash":"ee8a4676fc63dfa53ab9c245eb5b4a1f51e3acc8","modified":1517491654704},{"_id":"source/_posts/Http-Chapter-2/request-URI.png","hash":"beee80674c8e2f2acdd2303fae51f21dca0ae74b","modified":1517490400459},{"_id":"source/_posts/Shadowsocks-setup/login-server.png","hash":"5e9d6904c3dc8261cbcb806eacaa3d97ae05c4ac","modified":1514704131281},{"_id":"source/_posts/Shadowsocks-setup/ss.png","hash":"5f1bceb499130bf0197a97dc536d871bde2aaaf1","modified":1514704149742},{"_id":"source/_posts/Windows-tree/todo-item.png","hash":"b6dda2eedacfd3e79f42011a6621dbf182afd680","modified":1517221753917},{"_id":"source/_posts/Windows-tree/tree-file.png","hash":"9ba7f6c6beecaef6ca53f2526cad46b95a281a5c","modified":1517223652881},{"_id":"source/_posts/Windows-tree/tree-txt.png","hash":"d708858af3c83791bbf40145cdad378b5e8b057c","modified":1517224008793},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1514449887625},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1514449887632},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"a04bcd7925e722826245dd3085ddbc739ccf12ac","modified":1514449887639},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1514449887644},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1514449887649},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1514449887659},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1514449887667},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1514449887678},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1514449887683},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1514449887689},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1514449887698},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1514449887703},{"_id":"themes/next/.git/logs/HEAD","hash":"5c8c95e80e53c4a7ccd1e6d92329041708d221fd","modified":1514450038896},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1514450038952},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1514450038952},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1514450038952},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1514450038952},{"_id":"themes/next/layout/_macro/post.swig","hash":"afbe5342c51e1f40a5c1f8a0f6a1529dab7f1a9c","modified":1515227014232},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1514450038952},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1515224583323},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1514450038952},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1514450038952},{"_id":"themes/next/layout/_partials/footer.swig","hash":"98338c5b24d9ddc9a3c7e58962b5ac1c679d3a48","modified":1515228378454},{"_id":"themes/next/layout/_partials/head.swig","hash":"7be54b64a23052f107b376e3c4d18c20c0f986fc","modified":1518159532342},{"_id":"themes/next/layout/_partials/header.swig","hash":"23698768408d29b8cbefba4870f81a878adc72c2","modified":1514683127461},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1514450038952},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1514450038952},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1514450038952},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1514450038968},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1514450038968},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1514450038968},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1514450038984},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1514450038984},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1514450038984},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1514450038984},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1514450038984},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1514450038984},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1514450038984},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1514450038984},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1514450038984},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1514450038999},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1514450038999},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1514450038999},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1514450038999},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1514450038999},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1514450038999},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1514450038999},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1514450039065},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1514450039066},{"_id":"themes/next/source/images/alipay.jpg","hash":"90b47b3e68e08e0db08fb0231b89ea17db9a0664","modified":1514468167861},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"7cab605f3bd86afbb5e73f95d5b0e44ad71aaebc","modified":1518094857674},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514450039067},{"_id":"themes/next/source/images/avatar.jpg","hash":"5d6f1822b371929d115e0810ab7864ea051d5aa0","modified":1514467232976},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1514450039068},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1514450039069},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1514450039069},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1514450039070},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1514450039071},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1514450039071},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1514450039072},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"c18f70ebb9f8112568b64514e63f38a65fc98586","modified":1518094652188},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"da09345a93d89d6387bebd6389934dd50c8ccb4f","modified":1518094862908},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514450039073},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1514450039074},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514450039074},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1514450039075},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1514450039075},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514450039076},{"_id":"source/_posts/Http-Chapter-1/DNS.png","hash":"c66cd1ba58938bf54d8aeac5da2ef82137e3de5f","modified":1517477567233},{"_id":"source/_posts/Http-Chapter-1/IP.png","hash":"6eb04f314bea9fba247b34bf6187fa1daf07417a","modified":1517477232301},{"_id":"source/_posts/Http-Chapter-1/TCP-IP.png","hash":"630490b134a70c0c6d646abd001da2cc87847f5c","modified":1517475830567},{"_id":"source/_posts/Http-Chapter-1/TCP.png","hash":"b97c87bf46fca1b74c5e1fe91fb26b4b65034b76","modified":1517477407399},{"_id":"source/_posts/Http-Chapter-1/web.png","hash":"123edf8a8b0446a21aa2c3775211faf2bcb61bef","modified":1517474106381},{"_id":"source/_posts/Http-Chapter-2/HTTP-Persistent-Connections.png","hash":"cdcf2c754ee18b4cd2b7c91474387a8cb487d5cf","modified":1518092797180},{"_id":"source/_posts/Http-Chapter-2/HTTP-TCP-2.png","hash":"887047e3d498d715dcc776baa67f2d270187ca09","modified":1518092485780},{"_id":"source/_posts/Http-Chapter-2/TRACE-1.png","hash":"8bdea5575ec46ae21a6cb486ad70f48f88562e1a","modified":1518090386968},{"_id":"source/_posts/Http-Chapter-2/pipelining.png","hash":"38a046f0bf0f15d68bf1e5a722ffb521a8e0e89d","modified":1518093172870},{"_id":"source/_posts/Shadowsocks-setup/bang-website.png","hash":"8ea08ad4e2ed857997bb6591d61fd110cff14f9f","modified":1514703949079},{"_id":"source/_posts/Shadowsocks-setup/buy.png","hash":"bfa0bbc1215a44c26c2404e3bbedbb47df75d76a","modified":1514704074378},{"_id":"source/_posts/Shadowsocks-setup/login.png","hash":"212030568d3b0292fc7a0792708754d352b4493f","modified":1514704117742},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450038968},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450038968},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450039046},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450039046},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450039047},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514450039063},{"_id":"themes/next/source/images/wechatpay.jpg","hash":"e1fc8eb5f44a65367ee447b1ac1bf01a1f4b1e94","modified":1514468158438},{"_id":"source/_posts/Http-Chapter-1/HTTP-TCPIP-DNS.png","hash":"922fbd6fdb6dcec18c3bcdf962ca974741256fa5","modified":1517471902237},{"_id":"source/_posts/Hello-Hexo/github-desktop-use.png","hash":"a6deceb283f9010ad2561bbd267b3eb745596a4d","modified":1514705024267},{"_id":"source/_posts/Http-Chapter-2/HTTP-URI.png","hash":"d7496b5f8f7538207c4295310a260e3e06418eb3","modified":1517492555965},{"_id":"themes/next/.git/refs/heads/master","hash":"d3fd637d93e1232306975b36c3d43a1f2804277d","modified":1514450038896},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1514450038952},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1514450038952},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1514450038952},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1514450038952},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1514450038952},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1514450038952},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1514450038952},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1514450038952},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1514450038952},{"_id":"themes/next/layout/_scripts/myscript/myscript.swig","hash":"b8a7e94a9b1c55171471526f6884129570bef48f","modified":1514683464562},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1514450038968},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1514450038968},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1514450038968},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1514450038984},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1514450038968},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1514450038968},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1514450038984},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1514450038984},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1514450038984},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1514450038984},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"2dc7c2235de88c07c61718f034c7df5d7058efd0","modified":1517226286232},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1514450039030},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1514450039046},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1514450039047},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1514450039062},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1514450039062},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1514686493229},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1514703564682},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"221dd69c8449c77d3ed7cb8911ff0e902beb5ce0","modified":1516625424163},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1514450039078},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1514450039079},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1514450039077},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1514450039078},{"_id":"themes/next/source/js/src/love.js","hash":"d385109efe770b5096cf77bb2898c774589292b5","modified":1515572264284},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1514450039079},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1514450039080},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1514450039081},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1514450039081},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1514450039082},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1514450039083},{"_id":"themes/next/source/js/src/utils.js","hash":"b7ddc240208d57596a67c78a04a11b0f0bdecc97","modified":1517227931392},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514450039093},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514450039098},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1514450039099},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1514450039100},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1514450039100},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1514450039111},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1514450039112},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1514450039112},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1514450039113},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1514450039115},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1514450039116},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1514450039116},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1514450039117},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1514450039117},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1514450039123},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1514450039138},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1514450039138},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1514450039138},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1514450039138},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1514450039138},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1514450039138},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1514450039138},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1514450039138},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"f9723d7185194e8cc67bfaba9186e3b8e7383a1f","modified":1514469912012},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1514450039154},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1514450039154},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1514450039154},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514450039138},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1514450039138},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1514450039154},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1514450039154},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1514450039154},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1514450039154},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1514450039154},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1514450039138},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"5c8c95e80e53c4a7ccd1e6d92329041708d221fd","modified":1514450038897},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1514450038891},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1514450038984},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1514450038984},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1514450039015},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1514450039030},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1514450039030},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1514450039030},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1514450039030},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1514450039030},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1514450039030},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1514450039030},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1514450039048},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1514450039049},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1514450039049},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1514450039050},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1514450039050},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1514450039051},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1514450039051},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1514450039052},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1514450039054},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1514450039055},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1514450039055},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1514450039056},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1514450039056},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1514450039058},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"b963e97469d18bfecfbbc61e9f133a6a0290c313","modified":1516541919964},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1514450039059},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1514450039060},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"30561ed60fc64f3e4ce85143bdb55faa814743a6","modified":1514450039060},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1514450039061},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1514450039082},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1514450039088},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1514450039088},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1514450039088},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514450039101},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514450039102},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514450039102},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514450039103},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514450039103},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514450039104},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1514450039108},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1514450039110},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1514450039110},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514450039114},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1514450039114},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1514450039118},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1514450039119},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1514450039120},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1514450039154},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1514450039154},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1514450039088},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514450039123},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514450039123},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1514450039154},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"5c8c95e80e53c4a7ccd1e6d92329041708d221fd","modified":1514450038891},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"cb19d5bba447ba92d98666367b0275ecd6c26f55","modified":1514683595103},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1514450038999},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e5fb1e1744930b5f1f8c665c8954da4c6eacb24f","modified":1515227113679},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1514450039015},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"61fa67abc6cfd24d502918119d3d1bb8e6b01956","modified":1514703623356},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1514450039030},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1514450039030},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1514450039053},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1514450039054},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1514450039057},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514450039086},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514450039086},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514450039087},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514450039087},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514450039088},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1514450039106},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514450039105},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1514450039106},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1514450039107},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1514450039107},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1514450039108},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514450039123},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514450039123},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514450039123},{"_id":"themes/next/.git/objects/pack/pack-b25e5425e24a934618869325d247e99f16b47988.idx","hash":"849330d837a262e745b100351dd02174ea5f52f9","modified":1514450038842},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1514450039097},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1514450039154},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1514450039123},{"_id":"themes/next/.git/objects/pack/pack-b25e5425e24a934618869325d247e99f16b47988.pack","hash":"3661e9cb35f70c5f60a63427c0c93d8ac0af0c5f","modified":1514450038843},{"_id":"public/atom.xml","hash":"923bda1cc41ebf9a7f255faeaff4d17d4442c288","modified":1518159708825},{"_id":"public/search.xml","hash":"74c7e9f40a560917d66a6a9f4b112d5cbaf2578c","modified":1518159708844},{"_id":"public/404.html","hash":"7e2f1884b3dd93857e4ecfdbdcf14726d41205fb","modified":1518159708997},{"_id":"public/about/index.html","hash":"c0c5f175071e2b2f2f5356fe4ddadee608094c0a","modified":1518159708997},{"_id":"public/categories/index.html","hash":"950793abf61285eb4269a832f0bdf3d84e55d3a8","modified":1518159708998},{"_id":"public/tags/index.html","hash":"b250f02aed53e612101fb5385cd1995aaf0a5def","modified":1518159708998},{"_id":"public/2018/02/01/Http-Chapter-2/index.html","hash":"26a4e82233b42836f5d69259d8a8ceecfbaf864f","modified":1518159708998},{"_id":"public/2018/02/01/Http-Chapter-1/index.html","hash":"5bcb3202ebe0298606ef56d1a027fd49bad0f319","modified":1518159708999},{"_id":"public/2018/01/29/Windows-tree/index.html","hash":"8017179c3f0c5bae40a1b0fb62c0ad48cd8c3d69","modified":1518159708999},{"_id":"public/2017/12/02/JavaScript/index.html","hash":"8e1ffc13d8156c19024614bbb7b942900592fca6","modified":1518159708999},{"_id":"public/2017/11/05/Hello-Hexo/index.html","hash":"a76224d515b62104551962440d185fdc57d052bc","modified":1518159708999},{"_id":"public/2017/10/20/Shadowsocks-setup/index.html","hash":"27ef4eaf16e3c887f419bf44d7921f6e7880fbc1","modified":1518159708999},{"_id":"public/archives/index.html","hash":"ca5e68e3ff18f6b649243f43d621e3a0d8b45538","modified":1518159708999},{"_id":"public/archives/2017/index.html","hash":"642afb6fb2f2ddef77a6b6ad051da603c68f6d17","modified":1518159708999},{"_id":"public/archives/2017/10/index.html","hash":"35ffbe1790b5a3474b1ed3990bb71d2b6982040d","modified":1518159709000},{"_id":"public/archives/2017/11/index.html","hash":"e18236d0f16071e76d9d9d4c0d999b7cb90d9116","modified":1518159709000},{"_id":"public/archives/2017/12/index.html","hash":"eaca4eb5c6c445e907b91c741d6bef6bf20fc103","modified":1518159709000},{"_id":"public/archives/2018/index.html","hash":"8251e33b1c3c1efd248e859d0c477f5f2e4bf892","modified":1518159709000},{"_id":"public/archives/2018/01/index.html","hash":"10861782a58bdee3afdb755e68c504b22d0c1138","modified":1518159709000},{"_id":"public/archives/2018/02/index.html","hash":"98b86211ada285129d93432bd697eff1b78e77c5","modified":1518159709000},{"_id":"public/categories/Hexo建站/index.html","hash":"6148dba74798d5353e7fb17e7b087d7a4715c62c","modified":1518159709000},{"_id":"public/categories/Web/index.html","hash":"a09cd9ae461f1d40fccf6f4fd90aa0fb195e69b1","modified":1518159709000},{"_id":"public/categories/技术/index.html","hash":"db7e3ef29b77218d4936415d58f78b6ebe149af6","modified":1518159709001},{"_id":"public/categories/Web/HTTP/index.html","hash":"4eee69ab76b6841a225f16982dc1b3fbe794fdd4","modified":1518159709001},{"_id":"public/categories/Web/前端/index.html","hash":"af75b60d775533f0295735a50362227fb14c8660","modified":1518159709001},{"_id":"public/categories/技术/VPS-Shadowsocks/index.html","hash":"a520158a40baf45e4d7ed606cfa8c7e52c58987d","modified":1518159709001},{"_id":"public/categories/技术/Windows/index.html","hash":"bfca4c7acaad2679d9e82289b504f2511cd972e9","modified":1518159709001},{"_id":"public/categories/Web/HTTP/图解HTTP-笔记/index.html","hash":"4c1356e8fd83b03b3e8afa8db79384f8e0358c27","modified":1518159709001},{"_id":"public/categories/Web/前端/JavaScript/index.html","hash":"c27986151f3a9b294f631f7258366ca4f7cec813","modified":1518159709001},{"_id":"public/index.html","hash":"f07b9005d04fa1ef79af436b4de7991d8c537a4a","modified":1518159709001},{"_id":"public/page/2/index.html","hash":"0f2de53aa85b139b21c94b5715bf407e67d37949","modified":1518159709001},{"_id":"public/tags/建站/index.html","hash":"1bb03ac5976dbdf2fcc60d3fddb4cc9b39c3e12e","modified":1518159709001},{"_id":"public/tags/Hexo/index.html","hash":"01fd5e690f6efab69f4aece4f4576725126f9a05","modified":1518159709002},{"_id":"public/tags/Web/index.html","hash":"b4595b03cff547b80bdda6e269387aa1cc7a72d2","modified":1518159709002},{"_id":"public/tags/HTTP/index.html","hash":"5459ab3aa9476792b38be0dee8c0ecb2798555f5","modified":1518159709002},{"_id":"public/tags/学习笔记/index.html","hash":"5d7b434b3de3f9bf1e662bdaf006bfa7d1e2e3c2","modified":1518159709002},{"_id":"public/tags/前端/index.html","hash":"d43673c4604d59cfdbe96c75675448f96b47c047","modified":1518159709002},{"_id":"public/tags/JavaScript/index.html","hash":"f4a2d1ce9e681afc7d618dcffcaacfdf8799f5f6","modified":1518159709002},{"_id":"public/tags/技术/index.html","hash":"adec3afd1666854997a2076e2f09bc397e1bb2b7","modified":1518159709002},{"_id":"public/tags/VPS-Shadowsocks/index.html","hash":"024ed988c7ae3c6d8d5d5d64c7e5c60dbb21d31f","modified":1518159709002},{"_id":"public/tags/windows/index.html","hash":"0cf5943fd50e300e87db3527d247451e616cd8c5","modified":1518159709002},{"_id":"public/tags/tree/index.html","hash":"66a27dd17153a8d0a459c2277d30cbb081f933b4","modified":1518159709002},{"_id":"public/README.md","hash":"efbc240ae4497308340a31a58d4478aca000c1a3","modified":1518159709038},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1518159709038},{"_id":"public/images/alipay.jpg","hash":"90b47b3e68e08e0db08fb0231b89ea17db9a0664","modified":1518159709038},{"_id":"public/images/apple-touch-icon-next.png","hash":"7cab605f3bd86afbb5e73f95d5b0e44ad71aaebc","modified":1518159709038},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1518159709038},{"_id":"public/images/avatar.jpg","hash":"5d6f1822b371929d115e0810ab7864ea051d5aa0","modified":1518159709038},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1518159709038},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1518159709038},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1518159709039},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1518159709039},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1518159709039},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1518159709039},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1518159709039},{"_id":"public/images/favicon-16x16-next.png","hash":"c18f70ebb9f8112568b64514e63f38a65fc98586","modified":1518159709039},{"_id":"public/images/favicon-32x32-next.png","hash":"da09345a93d89d6387bebd6389934dd50c8ccb4f","modified":1518159709039},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1518159709039},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1518159709039},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1518159709039},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1518159709039},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1518159709039},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1518159709040},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1518159709040},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1518159709040},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1518159709040},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1518159709040},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1518159709040},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1518159709040},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1518159709040},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1518159709040},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1518159709040},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1518159709040},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1518159709041},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1518159709041},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1518159709041},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1518159709041},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1518159709041},{"_id":"public/2018/01/29/Windows-tree/todo-item.png","hash":"b6dda2eedacfd3e79f42011a6621dbf182afd680","modified":1518159709041},{"_id":"public/2018/01/29/Windows-tree/tree-file.png","hash":"9ba7f6c6beecaef6ca53f2526cad46b95a281a5c","modified":1518159709041},{"_id":"public/2018/01/29/Windows-tree/tree-txt.png","hash":"d708858af3c83791bbf40145cdad378b5e8b057c","modified":1518159709041},{"_id":"public/2017/10/20/Shadowsocks-setup/login-server.png","hash":"5e9d6904c3dc8261cbcb806eacaa3d97ae05c4ac","modified":1518159709041},{"_id":"public/2017/10/20/Shadowsocks-setup/ss.png","hash":"5f1bceb499130bf0197a97dc536d871bde2aaaf1","modified":1518159709041},{"_id":"public/2017/11/05/Hello-Hexo/git-test.png","hash":"07d07601e0313091d19cec4c365a9a0dbff6ed7a","modified":1518159709042},{"_id":"public/2017/11/05/Hello-Hexo/github-create.png","hash":"a489c7600cafcd856ec792f6f4d32e46ffc839c2","modified":1518159709042},{"_id":"public/2017/11/05/Hello-Hexo/github-desktop.png","hash":"9b31dcf2999d121d4b7b1a94033dc3357017f239","modified":1518159709042},{"_id":"public/2017/11/05/Hello-Hexo/github-new.png","hash":"3af382aa17a326c2939a8642201e2690a85e8241","modified":1518159709042},{"_id":"public/2017/11/05/Hello-Hexo/hexo-file.png","hash":"aef8a8b3d9980e4dcd0ae70242f776d4e7cbb65a","modified":1518159709042},{"_id":"public/2017/11/05/Hello-Hexo/hexo-use.png","hash":"11370a2a3d368287f660027358fcaae1363b95ab","modified":1518159709042},{"_id":"public/2017/11/05/Hello-Hexo/node-test.png","hash":"1c8d498f14764ee31834fc98de4d7a842ed3e6ad","modified":1518159709043},{"_id":"public/2018/02/01/Http-Chapter-1/TCP-IP-2.png","hash":"237c458e4a85bfa942daefe30091557be7a6ccbb","modified":1518159709043},{"_id":"public/2018/02/01/Http-Chapter-1/URI.png","hash":"76780a4c48468d18e050d692a4654db2b3727bf2","modified":1518159709043},{"_id":"public/2018/02/01/Http-Chapter-2/CONNECT.png","hash":"884f1bf2e9ba2c6e32aacd2af6c1dfa24fd2a56f","modified":1518159709043},{"_id":"public/2018/02/01/Http-Chapter-2/DELETE.png","hash":"3f581d81c54e68dfb949203d63101adb759f1abd","modified":1518159709044},{"_id":"public/2018/02/01/Http-Chapter-2/GET.png","hash":"e7016eda8ec8f73dd612f261c7070151a0bd88e7","modified":1518159709044},{"_id":"public/2018/02/01/Http-Chapter-2/HEAD.png","hash":"864f67f01c0b93945238011eca9f01365313dc29","modified":1518159709045},{"_id":"public/2018/02/01/Http-Chapter-2/HTTP-TCP.png","hash":"b8f5058b2c93b9264c993ca9edeb139a6656e223","modified":1518159709045},{"_id":"public/2018/02/01/Http-Chapter-2/POST.png","hash":"af315754ed20572fe73a9a434d384b752159581b","modified":1518159709045},{"_id":"public/2018/02/01/Http-Chapter-2/PUT.png","hash":"bb57a7b5f50062196788be2e2cf5d788cb38ca9a","modified":1518159709045},{"_id":"public/2018/02/01/Http-Chapter-2/TRACE-2.png","hash":"2bfd6c49e69fd129e7d5a0729f00530857bd3359","modified":1518159709046},{"_id":"public/2018/02/01/Http-Chapter-2/answer.png","hash":"bafe1f178c0d809a9d3353ff5fc9de3145712624","modified":1518159709046},{"_id":"public/2018/02/01/Http-Chapter-2/options.png","hash":"7cf8365c4922c45e0966937439542ca5257c8f90","modified":1518159709046},{"_id":"public/2018/02/01/Http-Chapter-2/request-URI-2.png","hash":"ee8a4676fc63dfa53ab9c245eb5b4a1f51e3acc8","modified":1518159709046},{"_id":"public/2018/02/01/Http-Chapter-2/request-URI.png","hash":"beee80674c8e2f2acdd2303fae51f21dca0ae74b","modified":1518159709046},{"_id":"public/images/wechatpay.jpg","hash":"e1fc8eb5f44a65367ee447b1ac1bf01a1f4b1e94","modified":1518159710049},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1518159710052},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1518159710069},{"_id":"public/2017/10/20/Shadowsocks-setup/bang-website.png","hash":"8ea08ad4e2ed857997bb6591d61fd110cff14f9f","modified":1518159710069},{"_id":"public/2017/10/20/Shadowsocks-setup/buy.png","hash":"bfa0bbc1215a44c26c2404e3bbedbb47df75d76a","modified":1518159710069},{"_id":"public/2017/10/20/Shadowsocks-setup/login.png","hash":"212030568d3b0292fc7a0792708754d352b4493f","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-1/DNS.png","hash":"c66cd1ba58938bf54d8aeac5da2ef82137e3de5f","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-1/IP.png","hash":"6eb04f314bea9fba247b34bf6187fa1daf07417a","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-1/TCP-IP.png","hash":"630490b134a70c0c6d646abd001da2cc87847f5c","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-1/TCP.png","hash":"b97c87bf46fca1b74c5e1fe91fb26b4b65034b76","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-1/web.png","hash":"123edf8a8b0446a21aa2c3775211faf2bcb61bef","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-2/HTTP-Persistent-Connections.png","hash":"cdcf2c754ee18b4cd2b7c91474387a8cb487d5cf","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-2/HTTP-TCP-2.png","hash":"887047e3d498d715dcc776baa67f2d270187ca09","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-2/TRACE-1.png","hash":"8bdea5575ec46ae21a6cb486ad70f48f88562e1a","modified":1518159710070},{"_id":"public/2018/02/01/Http-Chapter-2/pipelining.png","hash":"38a046f0bf0f15d68bf1e5a722ffb521a8e0e89d","modified":1518159710070},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1518159710099},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1518159710099},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1518159710099},{"_id":"public/js/src/love.js","hash":"a0dc4aa56ab10058d6336230878fe23612b34103","modified":1518159710101},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1518159710101},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1518159710101},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1518159710101},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1518159710101},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1518159710101},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1518159710101},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1518159710101},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1518159710101},{"_id":"public/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1518159710101},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1518159710102},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1518159710102},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1518159710102},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1518159710102},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1518159710102},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1518159710102},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1518159710102},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1518159710102},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1518159710102},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1518159710102},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1518159710102},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1518159710102},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1518159710102},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1518159710102},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1518159710103},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1518159710103},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1518159710103},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1518159710103},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1518159710103},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1518159710103},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1518159710103},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1518159710104},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1518159710104},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1518159710104},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1518159710104},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1518159710104},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1518159710104},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1518159710104},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1518159710104},{"_id":"public/css/main.css","hash":"38ef930b613072cc0e350fdd0be61f773f7fb3c0","modified":1518159710104},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1518159710104},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"fc155eef27d38f883e6b68dea8144866a4935db0","modified":1518159710104},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1518159710104},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1518159710104},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1518159710104},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1518159710104},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1518159710105},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1518159710105},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1518159710105},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1518159710105},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1518159710105},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1518159710105},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1518159710105},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1518159710105},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1518159710105},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1518159710105},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1518159710105},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1518159710105},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1518159710105},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1518159710105},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1518159710106},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1518159710107},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1518159710107},{"_id":"public/2018/02/01/Http-Chapter-1/HTTP-TCPIP-DNS.png","hash":"922fbd6fdb6dcec18c3bcdf962ca974741256fa5","modified":1518159710107},{"_id":"public/2017/11/05/Hello-Hexo/github-desktop-use.png","hash":"a6deceb283f9010ad2561bbd267b3eb745596a4d","modified":1518159710107},{"_id":"public/2018/02/01/Http-Chapter-2/HTTP-URI.png","hash":"d7496b5f8f7538207c4295310a260e3e06418eb3","modified":1518159710108},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1518159710218}],"Category":[{"name":"Hexo建站","_id":"cjdfl37dq0005z0tfxthnrk1i"},{"name":"Web","_id":"cjdfl37e7000bz0tf4axjj0hk"},{"name":"技术","_id":"cjdfl37em000lz0tf7w01shon"},{"name":"HTTP","parent":"cjdfl37e7000bz0tf4axjj0hk","_id":"cjdfl37ep000qz0tf3ghadvzb"},{"name":"前端","parent":"cjdfl37e7000bz0tf4axjj0hk","_id":"cjdfl37es000wz0tfollt9a3j"},{"name":"VPS Shadowsocks","parent":"cjdfl37em000lz0tf7w01shon","_id":"cjdfl37ew0010z0tfzs98mo8g"},{"name":"Windows","parent":"cjdfl37em000lz0tf7w01shon","_id":"cjdfl37ez0013z0tfglj0thx2"},{"name":"图解HTTP-笔记","parent":"cjdfl37ep000qz0tf3ghadvzb","_id":"cjdfl37f00016z0tf9tzw9wu3"},{"name":"JavaScript","parent":"cjdfl37es000wz0tfollt9a3j","_id":"cjdfl37f4001gz0tfofda02yk"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2018-01-06T03:25:21.741Z","updated":"2018-01-06T03:25:21.741Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjdfl370t0000z0tfz9uy9233","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"关于我","_content":"### 我是一只小小小鸟\n### 想要飞却又飞不高\n### 因为我是一只“伯格”\n\n如果觉得无聊，来点音乐:musical_note:吧!\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"//music.163.com/outchain/player?type=0&id=2046762614&auto=1&height=430\"></iframe>","source":"about/index.md","raw":"---\ntitle: 关于我\n---\n### 我是一只小小小鸟\n### 想要飞却又飞不高\n### 因为我是一只“伯格”\n\n如果觉得无聊，来点音乐:musical_note:吧!\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=450 src=\"//music.163.com/outchain/player?type=0&id=2046762614&auto=1&height=430\"></iframe>","date":"2018-01-29T12:58:22.706Z","updated":"2018-01-29T12:58:22.706Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjdfl37dh0002z0tf0a6mvh19","content":"<h3 id=\"我是一只小小小鸟\"><a href=\"#我是一只小小小鸟\" class=\"headerlink\" title=\"我是一只小小小鸟\"></a>我是一只小小小鸟</h3><h3 id=\"想要飞却又飞不高\"><a href=\"#想要飞却又飞不高\" class=\"headerlink\" title=\"想要飞却又飞不高\"></a>想要飞却又飞不高</h3><h3 id=\"因为我是一只“伯格”\"><a href=\"#因为我是一只“伯格”\" class=\"headerlink\" title=\"因为我是一只“伯格”\"></a>因为我是一只“伯格”</h3><p>如果觉得无聊，来点音乐<span class=\"github-emoji\" title=\"musical_note\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f3b5.png?v7\">&#x1f3b5;</span>吧!</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"//music.163.com/outchain/player?type=0&id=2046762614&auto=1&height=430\"></iframe>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"我是一只小小小鸟\"><a href=\"#我是一只小小小鸟\" class=\"headerlink\" title=\"我是一只小小小鸟\"></a>我是一只小小小鸟</h3><h3 id=\"想要飞却又飞不高\"><a href=\"#想要飞却又飞不高\" class=\"headerlink\" title=\"想要飞却又飞不高\"></a>想要飞却又飞不高</h3><h3 id=\"因为我是一只“伯格”\"><a href=\"#因为我是一只“伯格”\" class=\"headerlink\" title=\"因为我是一只“伯格”\"></a>因为我是一只“伯格”</h3><p>如果觉得无聊，来点音乐<span class=\"github-emoji\" title=\"musical_note\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f3b5.png?v7\">&#x1f3b5;</span>吧!</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"450\" src=\"//music.163.com/outchain/player?type=0&id=2046762614&auto=1&height=430\"></iframe>"},{"title":"分类","date":"2018-01-06T03:35:16.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-01-06 11:35:16\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-06T04:32:49.808Z","path":"categories/index.html","layout":"page","_id":"cjdfl37dn0004z0tf1q37vwts","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-01-06T03:38:23.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-01-06 11:38:23\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-06T04:32:37.103Z","path":"tags/index.html","layout":"page","_id":"cjdfl37du0008z0tfqsar4h4z","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello-Hexo","date":"2017-11-05T07:16:08.000Z","_content":"\n# Hexo\n官网地址：[https://hexo.io/](https://hexo.io/)\n\n## 安装 `nodejs` 和 `git` \n在使用Hexo之前，必须要先安装[node.js](http://nodejs.cn/)和[Git](https://git-scm.com/),下载完之后和一般安装软件一样点击下一步就可以。安装完之后打开命令提示符或者 `WIN + R` 输入 `cmd`,输入 `node -v`,若成功则下图所示:\n![](Hello-Hexo/node-test.png)\n\n<!-- more -->\n\n在开始菜单中找到 `Git -> Git Bush`,则安装成功。\n![](Hello-Hexo/git-test.png)\n\n## 安装Hexo\n在[Hexo官网](https://hexo.io/)中，可查看相关命令来进行下载安装，通过文档来进行使用，简单易上手。\n![](Hello-Hexo/hexo-use.png)\n```\n# Hexo使用命令\n$ npm install hexo-cli -g #在全局下安装`hexo-cli`\n$ hexo init blog          #在当前地址创建`blog`文件\n$ cd blog                 #进入到`blog`文件中\n$ npm install             #使用`npm`进行安装\n$ hexo server             #在本次启动服务器进行预览\n```\n安装完之后可以在blog文件夹中看到相关文件:\n![](Hello-Hexo/hexo-file.png)\n{% note info %} 具体使用可查看[Hexo官方文档](https://hexo.io/zh-cn/docs/) {% endnote %}\n\n# Hexo部署到Github\n\n## 在Github上注册账号\n\n## 新建 `username.github.io` 仓库\n## 进入Github网站，输入你的账号密码后点击 `New repository`\n![](Hello-Hexo/github-new.png)\n## 点击完之后，填写相关信息创建该仓库\n![](Hello-Hexo/github-create.png)\n## 在本地生成静态文件\n```\n$ hexo new \"post-name\"  //新建一片文章\n$ hexo genernate        //生成静态文件在public文件家中\n$ hexo deploy           //上传到GitHub上\n```\n> **在每次 `hexo g` 前最好先使用 `hexo clean`**\n\n## 使用 `hexo deploy` 上传到GitHub\n可能会出现22号端口链接错误，需要进行git配置：\n1. 生成 `ssh密钥`\n2. 在你的GitHub账户中添加生成的ssh密钥\n3. 在本地的 `~/.ssh`文件夹中建立 `config` 文件，并添加：\n```\nHost github.com\n  Hostname ssh.github.com\n  Port 443\n```\n在上传之前需要在 `站点配置文件` 中修改地址\n```\nurl: http://zyycode.github.io\nroot: /\n```\n\n## 使用GitHub Desktop上传\n[下载Github Desktop](https://desktop.github.com/)\n选择 `file -> clone repository` 在本地创建仓库后，然后将你 `public` 文件夹中的文件拷贝中刚克隆的 `zyycode.github.io` 文件中。\n![](Hello-Hexo/github-desktop.png)\n![](Hello-Hexo/github-desktop-use.png)\n\n## 在浏览中输入域名访问网站\n完成之后就可以在浏览器中输入[https://zyycode.github.io/](https://zyycode.github.io/)就可以查看你的博客了\n\n# Hexo进阶使用\n\n## Hexo更改主题\n> 我使用的是[Next主题](http://theme-next.iissnan.com/)\n\n在`Hexo主题` 选择你喜欢的主题，可以选择 `git` 下载 或者直接克隆下载文件到你的 `~\\blog\\themes` 目录下,同时在 `站点配置文件` 中修改。\n```\ntheme: next\n```\n## 添加分类页面和标签页面\n```\n$ hexo new page categories\n$ hexo new page tags\n```\n[新建分类页面](http://theme-next.iissnan.com/theme-settings.html#categories-page)\n[新建标签页面](http://theme-next.iissnan.com/theme-settings.html#tags-page)\n## [搜索功能](http://theme-next.iissnan.com/third-party-services.html#local-search)\n## [评论功能](http://theme-next.iissnan.com/third-party-services.html#comment-system)\n## [赞赏功能](http://theme-next.iissnan.com/theme-settings.html#reward)\n## [腾讯404工艺页面](http://theme-next.iissnan.com/theme-settings.html#volunteer-404)\n\n","source":"_posts/Hello-Hexo.md","raw":"---\ntitle: Hello-Hexo\ndate: 2017-11-5 15:16:08\ncategories:\n- Hexo建站\ntags:\n- 建站\n- Hexo\n---\n\n# Hexo\n官网地址：[https://hexo.io/](https://hexo.io/)\n\n## 安装 `nodejs` 和 `git` \n在使用Hexo之前，必须要先安装[node.js](http://nodejs.cn/)和[Git](https://git-scm.com/),下载完之后和一般安装软件一样点击下一步就可以。安装完之后打开命令提示符或者 `WIN + R` 输入 `cmd`,输入 `node -v`,若成功则下图所示:\n![](Hello-Hexo/node-test.png)\n\n<!-- more -->\n\n在开始菜单中找到 `Git -> Git Bush`,则安装成功。\n![](Hello-Hexo/git-test.png)\n\n## 安装Hexo\n在[Hexo官网](https://hexo.io/)中，可查看相关命令来进行下载安装，通过文档来进行使用，简单易上手。\n![](Hello-Hexo/hexo-use.png)\n```\n# Hexo使用命令\n$ npm install hexo-cli -g #在全局下安装`hexo-cli`\n$ hexo init blog          #在当前地址创建`blog`文件\n$ cd blog                 #进入到`blog`文件中\n$ npm install             #使用`npm`进行安装\n$ hexo server             #在本次启动服务器进行预览\n```\n安装完之后可以在blog文件夹中看到相关文件:\n![](Hello-Hexo/hexo-file.png)\n{% note info %} 具体使用可查看[Hexo官方文档](https://hexo.io/zh-cn/docs/) {% endnote %}\n\n# Hexo部署到Github\n\n## 在Github上注册账号\n\n## 新建 `username.github.io` 仓库\n## 进入Github网站，输入你的账号密码后点击 `New repository`\n![](Hello-Hexo/github-new.png)\n## 点击完之后，填写相关信息创建该仓库\n![](Hello-Hexo/github-create.png)\n## 在本地生成静态文件\n```\n$ hexo new \"post-name\"  //新建一片文章\n$ hexo genernate        //生成静态文件在public文件家中\n$ hexo deploy           //上传到GitHub上\n```\n> **在每次 `hexo g` 前最好先使用 `hexo clean`**\n\n## 使用 `hexo deploy` 上传到GitHub\n可能会出现22号端口链接错误，需要进行git配置：\n1. 生成 `ssh密钥`\n2. 在你的GitHub账户中添加生成的ssh密钥\n3. 在本地的 `~/.ssh`文件夹中建立 `config` 文件，并添加：\n```\nHost github.com\n  Hostname ssh.github.com\n  Port 443\n```\n在上传之前需要在 `站点配置文件` 中修改地址\n```\nurl: http://zyycode.github.io\nroot: /\n```\n\n## 使用GitHub Desktop上传\n[下载Github Desktop](https://desktop.github.com/)\n选择 `file -> clone repository` 在本地创建仓库后，然后将你 `public` 文件夹中的文件拷贝中刚克隆的 `zyycode.github.io` 文件中。\n![](Hello-Hexo/github-desktop.png)\n![](Hello-Hexo/github-desktop-use.png)\n\n## 在浏览中输入域名访问网站\n完成之后就可以在浏览器中输入[https://zyycode.github.io/](https://zyycode.github.io/)就可以查看你的博客了\n\n# Hexo进阶使用\n\n## Hexo更改主题\n> 我使用的是[Next主题](http://theme-next.iissnan.com/)\n\n在`Hexo主题` 选择你喜欢的主题，可以选择 `git` 下载 或者直接克隆下载文件到你的 `~\\blog\\themes` 目录下,同时在 `站点配置文件` 中修改。\n```\ntheme: next\n```\n## 添加分类页面和标签页面\n```\n$ hexo new page categories\n$ hexo new page tags\n```\n[新建分类页面](http://theme-next.iissnan.com/theme-settings.html#categories-page)\n[新建标签页面](http://theme-next.iissnan.com/theme-settings.html#tags-page)\n## [搜索功能](http://theme-next.iissnan.com/third-party-services.html#local-search)\n## [评论功能](http://theme-next.iissnan.com/third-party-services.html#comment-system)\n## [赞赏功能](http://theme-next.iissnan.com/theme-settings.html#reward)\n## [腾讯404工艺页面](http://theme-next.iissnan.com/theme-settings.html#volunteer-404)\n\n","slug":"Hello-Hexo","published":1,"updated":"2017-12-31T09:59:00.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdfl37db0001z0tf6rhyst2e","content":"<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><p>官网地址：<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/</a></p>\n<h2 id=\"安装-nodejs-和-git\"><a href=\"#安装-nodejs-和-git\" class=\"headerlink\" title=\"安装 nodejs 和 git\"></a>安装 <code>nodejs</code> 和 <code>git</code></h2><p>在使用Hexo之前，必须要先安装<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">node.js</a>和<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a>,下载完之后和一般安装软件一样点击下一步就可以。安装完之后打开命令提示符或者 <code>WIN + R</code> 输入 <code>cmd</code>,输入 <code>node -v</code>,若成功则下图所示:<br><img src=\"/2017/11/05/Hello-Hexo/node-test.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>在开始菜单中找到 <code>Git -&gt; Git Bush</code>,则安装成功。<br><img src=\"/2017/11/05/Hello-Hexo/git-test.png\" alt=\"\"></p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>在<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官网</a>中，可查看相关命令来进行下载安装，通过文档来进行使用，简单易上手。<br><img src=\"/2017/11/05/Hello-Hexo/hexo-use.png\" alt=\"\"><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Hexo使用命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-cli -g <span class=\"comment\">#在全局下安装`hexo-cli`</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo init blog          <span class=\"comment\">#在当前地址创建`blog`文件</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> blog                 <span class=\"comment\">#进入到`blog`文件中</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install             <span class=\"comment\">#使用`npm`进行安装</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo server             <span class=\"comment\">#在本次启动服务器进行预览</span></span></span><br></pre></td></tr></table></figure></p>\n<p>安装完之后可以在blog文件夹中看到相关文件:<br><img src=\"/2017/11/05/Hello-Hexo/hexo-file.png\" alt=\"\"><br><div class=\"note info\"><p>具体使用可查看<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a> </p></div></p>\n<h1 id=\"Hexo部署到Github\"><a href=\"#Hexo部署到Github\" class=\"headerlink\" title=\"Hexo部署到Github\"></a>Hexo部署到Github</h1><h2 id=\"在Github上注册账号\"><a href=\"#在Github上注册账号\" class=\"headerlink\" title=\"在Github上注册账号\"></a>在Github上注册账号</h2><h2 id=\"新建-username-github-io-仓库\"><a href=\"#新建-username-github-io-仓库\" class=\"headerlink\" title=\"新建 username.github.io 仓库\"></a>新建 <code>username.github.io</code> 仓库</h2><h2 id=\"进入Github网站，输入你的账号密码后点击-New-repository\"><a href=\"#进入Github网站，输入你的账号密码后点击-New-repository\" class=\"headerlink\" title=\"进入Github网站，输入你的账号密码后点击 New repository\"></a>进入Github网站，输入你的账号密码后点击 <code>New repository</code></h2><p><img src=\"/2017/11/05/Hello-Hexo/github-new.png\" alt=\"\"></p>\n<h2 id=\"点击完之后，填写相关信息创建该仓库\"><a href=\"#点击完之后，填写相关信息创建该仓库\" class=\"headerlink\" title=\"点击完之后，填写相关信息创建该仓库\"></a>点击完之后，填写相关信息创建该仓库</h2><p><img src=\"/2017/11/05/Hello-Hexo/github-create.png\" alt=\"\"></p>\n<h2 id=\"在本地生成静态文件\"><a href=\"#在本地生成静态文件\" class=\"headerlink\" title=\"在本地生成静态文件\"></a>在本地生成静态文件</h2><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> hexo new <span class=\"string\">\"post-name\"</span>  <span class=\"comment\">//新建一片文章</span></span><br><span class=\"line\"><span class=\"symbol\">$</span> hexo genernate        <span class=\"comment\">//生成静态文件在public文件家中</span></span><br><span class=\"line\"><span class=\"symbol\">$</span> hexo deploy           <span class=\"comment\">//上传到GitHub上</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>在每次 <code>hexo g</code> 前最好先使用 <code>hexo clean</code></strong></p>\n</blockquote>\n<h2 id=\"使用-hexo-deploy-上传到GitHub\"><a href=\"#使用-hexo-deploy-上传到GitHub\" class=\"headerlink\" title=\"使用 hexo deploy 上传到GitHub\"></a>使用 <code>hexo deploy</code> 上传到GitHub</h2><p>可能会出现22号端口链接错误，需要进行git配置：</p>\n<ol>\n<li>生成 <code>ssh密钥</code></li>\n<li>在你的GitHub账户中添加生成的ssh密钥</li>\n<li>在本地的 <code>~/.ssh</code>文件夹中建立 <code>config</code> 文件，并添加：<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">  Hostname ssh.github.com</span><br><span class=\"line\"> <span class=\"built_in\"> Port </span>443</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在上传之前需要在 <code>站点配置文件</code> 中修改地址<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">url:</span> <span class=\"string\">http:</span><span class=\"comment\">//zyycode.github.io</span></span><br><span class=\"line\"><span class=\"string\">root:</span> /</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用GitHub-Desktop上传\"><a href=\"#使用GitHub-Desktop上传\" class=\"headerlink\" title=\"使用GitHub Desktop上传\"></a>使用GitHub Desktop上传</h2><p><a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">下载Github Desktop</a><br>选择 <code>file -&gt; clone repository</code> 在本地创建仓库后，然后将你 <code>public</code> 文件夹中的文件拷贝中刚克隆的 <code>zyycode.github.io</code> 文件中。<br><img src=\"/2017/11/05/Hello-Hexo/github-desktop.png\" alt=\"\"><br><img src=\"/2017/11/05/Hello-Hexo/github-desktop-use.png\" alt=\"\"></p>\n<h2 id=\"在浏览中输入域名访问网站\"><a href=\"#在浏览中输入域名访问网站\" class=\"headerlink\" title=\"在浏览中输入域名访问网站\"></a>在浏览中输入域名访问网站</h2><p>完成之后就可以在浏览器中输入<a href=\"https://zyycode.github.io/\">https://zyycode.github.io/</a>就可以查看你的博客了</p>\n<h1 id=\"Hexo进阶使用\"><a href=\"#Hexo进阶使用\" class=\"headerlink\" title=\"Hexo进阶使用\"></a>Hexo进阶使用</h1><h2 id=\"Hexo更改主题\"><a href=\"#Hexo更改主题\" class=\"headerlink\" title=\"Hexo更改主题\"></a>Hexo更改主题</h2><blockquote>\n<p>我使用的是<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题</a></p>\n</blockquote>\n<p>在<code>Hexo主题</code> 选择你喜欢的主题，可以选择 <code>git</code> 下载 或者直接克隆下载文件到你的 <code>~\\blog\\themes</code> 目录下,同时在 <code>站点配置文件</code> 中修改。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: <span class=\"keyword\">next</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"添加分类页面和标签页面\"><a href=\"#添加分类页面和标签页面\" class=\"headerlink\" title=\"添加分类页面和标签页面\"></a>添加分类页面和标签页面</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>categories</span><br><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>tags</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://theme-next.iissnan.com/theme-settings.html#categories-page\" target=\"_blank\" rel=\"noopener\">新建分类页面</a><br><a href=\"http://theme-next.iissnan.com/theme-settings.html#tags-page\" target=\"_blank\" rel=\"noopener\">新建标签页面</a></p>\n<h2 id=\"搜索功能\"><a href=\"#搜索功能\" class=\"headerlink\" title=\"搜索功能\"></a><a href=\"http://theme-next.iissnan.com/third-party-services.html#local-search\" target=\"_blank\" rel=\"noopener\">搜索功能</a></h2><h2 id=\"评论功能\"><a href=\"#评论功能\" class=\"headerlink\" title=\"评论功能\"></a><a href=\"http://theme-next.iissnan.com/third-party-services.html#comment-system\" target=\"_blank\" rel=\"noopener\">评论功能</a></h2><h2 id=\"赞赏功能\"><a href=\"#赞赏功能\" class=\"headerlink\" title=\"赞赏功能\"></a><a href=\"http://theme-next.iissnan.com/theme-settings.html#reward\" target=\"_blank\" rel=\"noopener\">赞赏功能</a></h2><h2 id=\"腾讯404工艺页面\"><a href=\"#腾讯404工艺页面\" class=\"headerlink\" title=\"腾讯404工艺页面\"></a><a href=\"http://theme-next.iissnan.com/theme-settings.html#volunteer-404\" target=\"_blank\" rel=\"noopener\">腾讯404工艺页面</a></h2>","site":{"data":{}},"excerpt":"<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><p>官网地址：<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/</a></p>\n<h2 id=\"安装-nodejs-和-git\"><a href=\"#安装-nodejs-和-git\" class=\"headerlink\" title=\"安装 nodejs 和 git\"></a>安装 <code>nodejs</code> 和 <code>git</code></h2><p>在使用Hexo之前，必须要先安装<a href=\"http://nodejs.cn/\" target=\"_blank\" rel=\"noopener\">node.js</a>和<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a>,下载完之后和一般安装软件一样点击下一步就可以。安装完之后打开命令提示符或者 <code>WIN + R</code> 输入 <code>cmd</code>,输入 <code>node -v</code>,若成功则下图所示:<br><img src=\"/2017/11/05/Hello-Hexo/node-test.png\" alt=\"\"></p>","more":"<p>在开始菜单中找到 <code>Git -&gt; Git Bush</code>,则安装成功。<br><img src=\"/2017/11/05/Hello-Hexo/git-test.png\" alt=\"\"></p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><p>在<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官网</a>中，可查看相关命令来进行下载安装，通过文档来进行使用，简单易上手。<br><img src=\"/2017/11/05/Hello-Hexo/hexo-use.png\" alt=\"\"><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Hexo使用命令</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install hexo-cli -g <span class=\"comment\">#在全局下安装`hexo-cli`</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo init blog          <span class=\"comment\">#在当前地址创建`blog`文件</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> <span class=\"built_in\">cd</span> blog                 <span class=\"comment\">#进入到`blog`文件中</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> npm install             <span class=\"comment\">#使用`npm`进行安装</span></span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo server             <span class=\"comment\">#在本次启动服务器进行预览</span></span></span><br></pre></td></tr></table></figure></p>\n<p>安装完之后可以在blog文件夹中看到相关文件:<br><img src=\"/2017/11/05/Hello-Hexo/hexo-file.png\" alt=\"\"><br><div class=\"note info\"><p>具体使用可查看<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a> </p></div></p>\n<h1 id=\"Hexo部署到Github\"><a href=\"#Hexo部署到Github\" class=\"headerlink\" title=\"Hexo部署到Github\"></a>Hexo部署到Github</h1><h2 id=\"在Github上注册账号\"><a href=\"#在Github上注册账号\" class=\"headerlink\" title=\"在Github上注册账号\"></a>在Github上注册账号</h2><h2 id=\"新建-username-github-io-仓库\"><a href=\"#新建-username-github-io-仓库\" class=\"headerlink\" title=\"新建 username.github.io 仓库\"></a>新建 <code>username.github.io</code> 仓库</h2><h2 id=\"进入Github网站，输入你的账号密码后点击-New-repository\"><a href=\"#进入Github网站，输入你的账号密码后点击-New-repository\" class=\"headerlink\" title=\"进入Github网站，输入你的账号密码后点击 New repository\"></a>进入Github网站，输入你的账号密码后点击 <code>New repository</code></h2><p><img src=\"/2017/11/05/Hello-Hexo/github-new.png\" alt=\"\"></p>\n<h2 id=\"点击完之后，填写相关信息创建该仓库\"><a href=\"#点击完之后，填写相关信息创建该仓库\" class=\"headerlink\" title=\"点击完之后，填写相关信息创建该仓库\"></a>点击完之后，填写相关信息创建该仓库</h2><p><img src=\"/2017/11/05/Hello-Hexo/github-create.png\" alt=\"\"></p>\n<h2 id=\"在本地生成静态文件\"><a href=\"#在本地生成静态文件\" class=\"headerlink\" title=\"在本地生成静态文件\"></a>在本地生成静态文件</h2><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">$</span> hexo new <span class=\"string\">\"post-name\"</span>  <span class=\"comment\">//新建一片文章</span></span><br><span class=\"line\"><span class=\"symbol\">$</span> hexo genernate        <span class=\"comment\">//生成静态文件在public文件家中</span></span><br><span class=\"line\"><span class=\"symbol\">$</span> hexo deploy           <span class=\"comment\">//上传到GitHub上</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>在每次 <code>hexo g</code> 前最好先使用 <code>hexo clean</code></strong></p>\n</blockquote>\n<h2 id=\"使用-hexo-deploy-上传到GitHub\"><a href=\"#使用-hexo-deploy-上传到GitHub\" class=\"headerlink\" title=\"使用 hexo deploy 上传到GitHub\"></a>使用 <code>hexo deploy</code> 上传到GitHub</h2><p>可能会出现22号端口链接错误，需要进行git配置：</p>\n<ol>\n<li>生成 <code>ssh密钥</code></li>\n<li>在你的GitHub账户中添加生成的ssh密钥</li>\n<li>在本地的 <code>~/.ssh</code>文件夹中建立 <code>config</code> 文件，并添加：<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">  Hostname ssh.github.com</span><br><span class=\"line\"> <span class=\"built_in\"> Port </span>443</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在上传之前需要在 <code>站点配置文件</code> 中修改地址<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">url:</span> <span class=\"string\">http:</span><span class=\"comment\">//zyycode.github.io</span></span><br><span class=\"line\"><span class=\"string\">root:</span> /</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用GitHub-Desktop上传\"><a href=\"#使用GitHub-Desktop上传\" class=\"headerlink\" title=\"使用GitHub Desktop上传\"></a>使用GitHub Desktop上传</h2><p><a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">下载Github Desktop</a><br>选择 <code>file -&gt; clone repository</code> 在本地创建仓库后，然后将你 <code>public</code> 文件夹中的文件拷贝中刚克隆的 <code>zyycode.github.io</code> 文件中。<br><img src=\"/2017/11/05/Hello-Hexo/github-desktop.png\" alt=\"\"><br><img src=\"/2017/11/05/Hello-Hexo/github-desktop-use.png\" alt=\"\"></p>\n<h2 id=\"在浏览中输入域名访问网站\"><a href=\"#在浏览中输入域名访问网站\" class=\"headerlink\" title=\"在浏览中输入域名访问网站\"></a>在浏览中输入域名访问网站</h2><p>完成之后就可以在浏览器中输入<a href=\"https://zyycode.github.io/\">https://zyycode.github.io/</a>就可以查看你的博客了</p>\n<h1 id=\"Hexo进阶使用\"><a href=\"#Hexo进阶使用\" class=\"headerlink\" title=\"Hexo进阶使用\"></a>Hexo进阶使用</h1><h2 id=\"Hexo更改主题\"><a href=\"#Hexo更改主题\" class=\"headerlink\" title=\"Hexo更改主题\"></a>Hexo更改主题</h2><blockquote>\n<p>我使用的是<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">Next主题</a></p>\n</blockquote>\n<p>在<code>Hexo主题</code> 选择你喜欢的主题，可以选择 <code>git</code> 下载 或者直接克隆下载文件到你的 <code>~\\blog\\themes</code> 目录下,同时在 <code>站点配置文件</code> 中修改。<br><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: <span class=\"keyword\">next</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"添加分类页面和标签页面\"><a href=\"#添加分类页面和标签页面\" class=\"headerlink\" title=\"添加分类页面和标签页面\"></a>添加分类页面和标签页面</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>categories</span><br><span class=\"line\">$ hexo new<span class=\"built_in\"> page </span>tags</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://theme-next.iissnan.com/theme-settings.html#categories-page\" target=\"_blank\" rel=\"noopener\">新建分类页面</a><br><a href=\"http://theme-next.iissnan.com/theme-settings.html#tags-page\" target=\"_blank\" rel=\"noopener\">新建标签页面</a></p>\n<h2 id=\"搜索功能\"><a href=\"#搜索功能\" class=\"headerlink\" title=\"搜索功能\"></a><a href=\"http://theme-next.iissnan.com/third-party-services.html#local-search\" target=\"_blank\" rel=\"noopener\">搜索功能</a></h2><h2 id=\"评论功能\"><a href=\"#评论功能\" class=\"headerlink\" title=\"评论功能\"></a><a href=\"http://theme-next.iissnan.com/third-party-services.html#comment-system\" target=\"_blank\" rel=\"noopener\">评论功能</a></h2><h2 id=\"赞赏功能\"><a href=\"#赞赏功能\" class=\"headerlink\" title=\"赞赏功能\"></a><a href=\"http://theme-next.iissnan.com/theme-settings.html#reward\" target=\"_blank\" rel=\"noopener\">赞赏功能</a></h2><h2 id=\"腾讯404工艺页面\"><a href=\"#腾讯404工艺页面\" class=\"headerlink\" title=\"腾讯404工艺页面\"></a><a href=\"http://theme-next.iissnan.com/theme-settings.html#volunteer-404\" target=\"_blank\" rel=\"noopener\">腾讯404工艺页面</a></h2>"},{"title":"了解 Web 及网络基础","date":"2018-02-01T08:15:05.000Z","_content":"# 了解 Web 及网络基础\n\n## 使用 HTTP 协议访问 Web\n\n当我们使用浏览器时，在地址栏输入[www.baidu.com](https://www.baidu.com/)后，页面信息是如何呈现的呢？其实当我们在地址栏输入`URL`后，浏览器就会从服务器获取文件资源等信息，然后显示到浏览器上面。就比如，卖家在网上买东西，选购填写自己的地址信息后，然后卖家会根据你的地址通过快递公司发货给你，地址信息就相当于`URL`，卖家就相当于服务器，买家就相当于浏览器，快递公司就相当于传输协议（`HTTP协议`）。\n![](Http-Chapter-1/web.png)\nHTTP（HyperText Transfer Protocol，超文本传输协议，严谨来说应该叫超文本转移协议），完成从客户端到服务端等一系列运作流程。可以说，Web 是建立在 HTTP 协议上通信的。\n\n<!-- more -->\n\n## 网络基础 TCP/IP\n\n### TCP/IP 协议族\n\n`协议`: 不同的硬件、操作系统之间的通信规则。\n`TCP/IP`: 与互联网相关的协议的集合。\n{% fi Http-Chapter-1/TCP-IP.png, alt, 图：TCP/IP 是互联网相关的各类协议族的总称 %}\n\n### TCP/IP 分层管理\n\n- 应用层：决定了向用户提供应用服务时通信的活动\n- 传输层：对上层应用层，提供处于网络连接中的两台计算机之间的数据传输\n- 网络层（网络互连层）：处理在网络上流动的数据包\n- 链路层（数据链路层，网络接口层）：处理连接网络的硬件部分\n\n### TCP/IP 通信传输流\n\n利用 TCP/IP 协议族进行网络通信时，会通过分层顺序与对方进行\n通信。发送端从应用层往下走，接收端则往应用层往上走。\n![](Http-Chapter-1/TCP-IP-2.png)\n发送端在层与层之间传输数据时，每经过一层时必定会被打上一个\n该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。这种把数据包装起来的做法称为`封装`。\n\n## 与HTTP 关系密切的协议：IP、TCP 和 DNS\n\n### 负责传输的 IP 协议\n\n`IP`是一种协议的名称；`IP地址`是一串数字。IP协议的作用是把各种数据包传送给对方。IP 地址和 MAC 地址时确保传输到对方的两个重要条件。\n在网络上，通信的双方在同一局域网（LAN）内的情况是很少的，通常是经过多台计算机和网络设备中转才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（Address Resolution Protocol）。ARP 是一种用以解析地址的协议，根据通信方的IP 地址就可以反查出对应的 MAC 地址。\n![](Http-Chapter-1/IP.png)\n\n### 确保可靠性的 TCP 协议\n\n为了准确无误地将数据送达目标处，TCP 协议采用了三次握手（three-way handshaking）策略。\n![](Http-Chapter-1/TCP.png)\n\n### 负责域名解析的 DNS 服务\n\nDNS（Domain Name System）服务是和HTTP协议一样位于应用层的协议。它提供域名到 IP 地址之间的解析服务。\n![](Http-Chapter-1/DNS.png)\n\n## 各种协议与 HTTP 协议的关系\n\n![](Http-Chapter-1/HTTP-TCPIP-DNS.png)\n\n## URI 和 URL\n\n`URI`：统一资源标识符(Uniform Resource Indentifier)用来标识服务器上的资源。\n`URL`:统一资源定位符(Uniform Resouce Locator)是资源标识符最常见的表示格式。\nURL时URI的子集。\n区别：URI 定义资源，而 URL 不单定义这个资源，还定义了如何找到这个资源（即访问资源的方式）。\n\n**参考：**\n[《HTTP 协议中 URI 和 URL 有什么区别？》](https://www.zhihu.com/question/21950864)\n\n### 绝对 URI 格式\n\n![](Http-Chapter-1/URI.png)\n\n## 参考：\n\n[《图解HTTP》](https://book.douban.com/subject/25863515/)","source":"_posts/Http-Chapter-1.md","raw":"---\ntitle: 了解 Web 及网络基础\ndate: 2018-02-01 16:15:05\ncategories:\n- Web\n- HTTP\n- 图解HTTP-笔记\ntags:\n- Web\n- HTTP\n- 学习笔记\n---\n# 了解 Web 及网络基础\n\n## 使用 HTTP 协议访问 Web\n\n当我们使用浏览器时，在地址栏输入[www.baidu.com](https://www.baidu.com/)后，页面信息是如何呈现的呢？其实当我们在地址栏输入`URL`后，浏览器就会从服务器获取文件资源等信息，然后显示到浏览器上面。就比如，卖家在网上买东西，选购填写自己的地址信息后，然后卖家会根据你的地址通过快递公司发货给你，地址信息就相当于`URL`，卖家就相当于服务器，买家就相当于浏览器，快递公司就相当于传输协议（`HTTP协议`）。\n![](Http-Chapter-1/web.png)\nHTTP（HyperText Transfer Protocol，超文本传输协议，严谨来说应该叫超文本转移协议），完成从客户端到服务端等一系列运作流程。可以说，Web 是建立在 HTTP 协议上通信的。\n\n<!-- more -->\n\n## 网络基础 TCP/IP\n\n### TCP/IP 协议族\n\n`协议`: 不同的硬件、操作系统之间的通信规则。\n`TCP/IP`: 与互联网相关的协议的集合。\n{% fi Http-Chapter-1/TCP-IP.png, alt, 图：TCP/IP 是互联网相关的各类协议族的总称 %}\n\n### TCP/IP 分层管理\n\n- 应用层：决定了向用户提供应用服务时通信的活动\n- 传输层：对上层应用层，提供处于网络连接中的两台计算机之间的数据传输\n- 网络层（网络互连层）：处理在网络上流动的数据包\n- 链路层（数据链路层，网络接口层）：处理连接网络的硬件部分\n\n### TCP/IP 通信传输流\n\n利用 TCP/IP 协议族进行网络通信时，会通过分层顺序与对方进行\n通信。发送端从应用层往下走，接收端则往应用层往上走。\n![](Http-Chapter-1/TCP-IP-2.png)\n发送端在层与层之间传输数据时，每经过一层时必定会被打上一个\n该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。这种把数据包装起来的做法称为`封装`。\n\n## 与HTTP 关系密切的协议：IP、TCP 和 DNS\n\n### 负责传输的 IP 协议\n\n`IP`是一种协议的名称；`IP地址`是一串数字。IP协议的作用是把各种数据包传送给对方。IP 地址和 MAC 地址时确保传输到对方的两个重要条件。\n在网络上，通信的双方在同一局域网（LAN）内的情况是很少的，通常是经过多台计算机和网络设备中转才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（Address Resolution Protocol）。ARP 是一种用以解析地址的协议，根据通信方的IP 地址就可以反查出对应的 MAC 地址。\n![](Http-Chapter-1/IP.png)\n\n### 确保可靠性的 TCP 协议\n\n为了准确无误地将数据送达目标处，TCP 协议采用了三次握手（three-way handshaking）策略。\n![](Http-Chapter-1/TCP.png)\n\n### 负责域名解析的 DNS 服务\n\nDNS（Domain Name System）服务是和HTTP协议一样位于应用层的协议。它提供域名到 IP 地址之间的解析服务。\n![](Http-Chapter-1/DNS.png)\n\n## 各种协议与 HTTP 协议的关系\n\n![](Http-Chapter-1/HTTP-TCPIP-DNS.png)\n\n## URI 和 URL\n\n`URI`：统一资源标识符(Uniform Resource Indentifier)用来标识服务器上的资源。\n`URL`:统一资源定位符(Uniform Resouce Locator)是资源标识符最常见的表示格式。\nURL时URI的子集。\n区别：URI 定义资源，而 URL 不单定义这个资源，还定义了如何找到这个资源（即访问资源的方式）。\n\n**参考：**\n[《HTTP 协议中 URI 和 URL 有什么区别？》](https://www.zhihu.com/question/21950864)\n\n### 绝对 URI 格式\n\n![](Http-Chapter-1/URI.png)\n\n## 参考：\n\n[《图解HTTP》](https://book.douban.com/subject/25863515/)","slug":"Http-Chapter-1","published":1,"updated":"2018-02-09T03:39:29.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdfl37dk0003z0tfngkjkb90","content":"<h1 id=\"了解-Web-及网络基础\"><a href=\"#了解-Web-及网络基础\" class=\"headerlink\" title=\"了解 Web 及网络基础\"></a>了解 Web 及网络基础</h1><h2 id=\"使用-HTTP-协议访问-Web\"><a href=\"#使用-HTTP-协议访问-Web\" class=\"headerlink\" title=\"使用 HTTP 协议访问 Web\"></a>使用 HTTP 协议访问 Web</h2><p>当我们使用浏览器时，在地址栏输入<a href=\"https://www.baidu.com/\" target=\"_blank\" rel=\"noopener\">www.baidu.com</a>后，页面信息是如何呈现的呢？其实当我们在地址栏输入<code>URL</code>后，浏览器就会从服务器获取文件资源等信息，然后显示到浏览器上面。就比如，卖家在网上买东西，选购填写自己的地址信息后，然后卖家会根据你的地址通过快递公司发货给你，地址信息就相当于<code>URL</code>，卖家就相当于服务器，买家就相当于浏览器，快递公司就相当于传输协议（<code>HTTP协议</code>）。<br><img src=\"/2018/02/01/Http-Chapter-1/web.png\" alt=\"\"><br>HTTP（HyperText Transfer Protocol，超文本传输协议，严谨来说应该叫超文本转移协议），完成从客户端到服务端等一系列运作流程。可以说，Web 是建立在 HTTP 协议上通信的。</p>\n<a id=\"more\"></a>\n<h2 id=\"网络基础-TCP-IP\"><a href=\"#网络基础-TCP-IP\" class=\"headerlink\" title=\"网络基础 TCP/IP\"></a>网络基础 TCP/IP</h2><h3 id=\"TCP-IP-协议族\"><a href=\"#TCP-IP-协议族\" class=\"headerlink\" title=\"TCP/IP 协议族\"></a>TCP/IP 协议族</h3><p><code>协议</code>: 不同的硬件、操作系统之间的通信规则。<br><code>TCP/IP</code>: 与互联网相关的协议的集合。<br><span itemprop=\"image\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><img itemprop=\"url image\" src=\"/2018/02/01/Http-Chapter-1/TCP-IP.png\" class=\"full-image\" alt=\"alt\" title=\"图：TCP/IP 是互联网相关的各类协议族的总称\"><meta itemprop=\"width\" content=\"auto\"><meta itemprop=\"height\" content=\"auto\"></span></p>\n<h3 id=\"TCP-IP-分层管理\"><a href=\"#TCP-IP-分层管理\" class=\"headerlink\" title=\"TCP/IP 分层管理\"></a>TCP/IP 分层管理</h3><ul>\n<li>应用层：决定了向用户提供应用服务时通信的活动</li>\n<li>传输层：对上层应用层，提供处于网络连接中的两台计算机之间的数据传输</li>\n<li>网络层（网络互连层）：处理在网络上流动的数据包</li>\n<li>链路层（数据链路层，网络接口层）：处理连接网络的硬件部分</li>\n</ul>\n<h3 id=\"TCP-IP-通信传输流\"><a href=\"#TCP-IP-通信传输流\" class=\"headerlink\" title=\"TCP/IP 通信传输流\"></a>TCP/IP 通信传输流</h3><p>利用 TCP/IP 协议族进行网络通信时，会通过分层顺序与对方进行<br>通信。发送端从应用层往下走，接收端则往应用层往上走。<br><img src=\"/2018/02/01/Http-Chapter-1/TCP-IP-2.png\" alt=\"\"><br>发送端在层与层之间传输数据时，每经过一层时必定会被打上一个<br>该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。这种把数据包装起来的做法称为<code>封装</code>。</p>\n<h2 id=\"与HTTP-关系密切的协议：IP、TCP-和-DNS\"><a href=\"#与HTTP-关系密切的协议：IP、TCP-和-DNS\" class=\"headerlink\" title=\"与HTTP 关系密切的协议：IP、TCP 和 DNS\"></a>与HTTP 关系密切的协议：IP、TCP 和 DNS</h2><h3 id=\"负责传输的-IP-协议\"><a href=\"#负责传输的-IP-协议\" class=\"headerlink\" title=\"负责传输的 IP 协议\"></a>负责传输的 IP 协议</h3><p><code>IP</code>是一种协议的名称；<code>IP地址</code>是一串数字。IP协议的作用是把各种数据包传送给对方。IP 地址和 MAC 地址时确保传输到对方的两个重要条件。<br>在网络上，通信的双方在同一局域网（LAN）内的情况是很少的，通常是经过多台计算机和网络设备中转才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（Address Resolution Protocol）。ARP 是一种用以解析地址的协议，根据通信方的IP 地址就可以反查出对应的 MAC 地址。<br><img src=\"/2018/02/01/Http-Chapter-1/IP.png\" alt=\"\"></p>\n<h3 id=\"确保可靠性的-TCP-协议\"><a href=\"#确保可靠性的-TCP-协议\" class=\"headerlink\" title=\"确保可靠性的 TCP 协议\"></a>确保可靠性的 TCP 协议</h3><p>为了准确无误地将数据送达目标处，TCP 协议采用了三次握手（three-way handshaking）策略。<br><img src=\"/2018/02/01/Http-Chapter-1/TCP.png\" alt=\"\"></p>\n<h3 id=\"负责域名解析的-DNS-服务\"><a href=\"#负责域名解析的-DNS-服务\" class=\"headerlink\" title=\"负责域名解析的 DNS 服务\"></a>负责域名解析的 DNS 服务</h3><p>DNS（Domain Name System）服务是和HTTP协议一样位于应用层的协议。它提供域名到 IP 地址之间的解析服务。<br><img src=\"/2018/02/01/Http-Chapter-1/DNS.png\" alt=\"\"></p>\n<h2 id=\"各种协议与-HTTP-协议的关系\"><a href=\"#各种协议与-HTTP-协议的关系\" class=\"headerlink\" title=\"各种协议与 HTTP 协议的关系\"></a>各种协议与 HTTP 协议的关系</h2><p><img src=\"/2018/02/01/Http-Chapter-1/HTTP-TCPIP-DNS.png\" alt=\"\"></p>\n<h2 id=\"URI-和-URL\"><a href=\"#URI-和-URL\" class=\"headerlink\" title=\"URI 和 URL\"></a>URI 和 URL</h2><p><code>URI</code>：统一资源标识符(Uniform Resource Indentifier)用来标识服务器上的资源。<br><code>URL</code>:统一资源定位符(Uniform Resouce Locator)是资源标识符最常见的表示格式。<br>URL时URI的子集。<br>区别：URI 定义资源，而 URL 不单定义这个资源，还定义了如何找到这个资源（即访问资源的方式）。</p>\n<p><strong>参考：</strong><br><a href=\"https://www.zhihu.com/question/21950864\" target=\"_blank\" rel=\"noopener\">《HTTP 协议中 URI 和 URL 有什么区别？》</a></p>\n<h3 id=\"绝对-URI-格式\"><a href=\"#绝对-URI-格式\" class=\"headerlink\" title=\"绝对 URI 格式\"></a>绝对 URI 格式</h3><p><img src=\"/2018/02/01/Http-Chapter-1/URI.png\" alt=\"\"></p>\n<h2 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h2><p><a href=\"https://book.douban.com/subject/25863515/\" target=\"_blank\" rel=\"noopener\">《图解HTTP》</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"了解-Web-及网络基础\"><a href=\"#了解-Web-及网络基础\" class=\"headerlink\" title=\"了解 Web 及网络基础\"></a>了解 Web 及网络基础</h1><h2 id=\"使用-HTTP-协议访问-Web\"><a href=\"#使用-HTTP-协议访问-Web\" class=\"headerlink\" title=\"使用 HTTP 协议访问 Web\"></a>使用 HTTP 协议访问 Web</h2><p>当我们使用浏览器时，在地址栏输入<a href=\"https://www.baidu.com/\" target=\"_blank\" rel=\"noopener\">www.baidu.com</a>后，页面信息是如何呈现的呢？其实当我们在地址栏输入<code>URL</code>后，浏览器就会从服务器获取文件资源等信息，然后显示到浏览器上面。就比如，卖家在网上买东西，选购填写自己的地址信息后，然后卖家会根据你的地址通过快递公司发货给你，地址信息就相当于<code>URL</code>，卖家就相当于服务器，买家就相当于浏览器，快递公司就相当于传输协议（<code>HTTP协议</code>）。<br><img src=\"/2018/02/01/Http-Chapter-1/web.png\" alt=\"\"><br>HTTP（HyperText Transfer Protocol，超文本传输协议，严谨来说应该叫超文本转移协议），完成从客户端到服务端等一系列运作流程。可以说，Web 是建立在 HTTP 协议上通信的。</p>","more":"<h2 id=\"网络基础-TCP-IP\"><a href=\"#网络基础-TCP-IP\" class=\"headerlink\" title=\"网络基础 TCP/IP\"></a>网络基础 TCP/IP</h2><h3 id=\"TCP-IP-协议族\"><a href=\"#TCP-IP-协议族\" class=\"headerlink\" title=\"TCP/IP 协议族\"></a>TCP/IP 协议族</h3><p><code>协议</code>: 不同的硬件、操作系统之间的通信规则。<br><code>TCP/IP</code>: 与互联网相关的协议的集合。<br><span itemprop=\"image\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><img itemprop=\"url image\" src=\"/2018/02/01/Http-Chapter-1/TCP-IP.png\" class=\"full-image\" alt=\"alt\" title=\"图：TCP/IP 是互联网相关的各类协议族的总称\"><meta itemprop=\"width\" content=\"auto\"><meta itemprop=\"height\" content=\"auto\"></span></p>\n<h3 id=\"TCP-IP-分层管理\"><a href=\"#TCP-IP-分层管理\" class=\"headerlink\" title=\"TCP/IP 分层管理\"></a>TCP/IP 分层管理</h3><ul>\n<li>应用层：决定了向用户提供应用服务时通信的活动</li>\n<li>传输层：对上层应用层，提供处于网络连接中的两台计算机之间的数据传输</li>\n<li>网络层（网络互连层）：处理在网络上流动的数据包</li>\n<li>链路层（数据链路层，网络接口层）：处理连接网络的硬件部分</li>\n</ul>\n<h3 id=\"TCP-IP-通信传输流\"><a href=\"#TCP-IP-通信传输流\" class=\"headerlink\" title=\"TCP/IP 通信传输流\"></a>TCP/IP 通信传输流</h3><p>利用 TCP/IP 协议族进行网络通信时，会通过分层顺序与对方进行<br>通信。发送端从应用层往下走，接收端则往应用层往上走。<br><img src=\"/2018/02/01/Http-Chapter-1/TCP-IP-2.png\" alt=\"\"><br>发送端在层与层之间传输数据时，每经过一层时必定会被打上一个<br>该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。这种把数据包装起来的做法称为<code>封装</code>。</p>\n<h2 id=\"与HTTP-关系密切的协议：IP、TCP-和-DNS\"><a href=\"#与HTTP-关系密切的协议：IP、TCP-和-DNS\" class=\"headerlink\" title=\"与HTTP 关系密切的协议：IP、TCP 和 DNS\"></a>与HTTP 关系密切的协议：IP、TCP 和 DNS</h2><h3 id=\"负责传输的-IP-协议\"><a href=\"#负责传输的-IP-协议\" class=\"headerlink\" title=\"负责传输的 IP 协议\"></a>负责传输的 IP 协议</h3><p><code>IP</code>是一种协议的名称；<code>IP地址</code>是一串数字。IP协议的作用是把各种数据包传送给对方。IP 地址和 MAC 地址时确保传输到对方的两个重要条件。<br>在网络上，通信的双方在同一局域网（LAN）内的情况是很少的，通常是经过多台计算机和网络设备中转才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（Address Resolution Protocol）。ARP 是一种用以解析地址的协议，根据通信方的IP 地址就可以反查出对应的 MAC 地址。<br><img src=\"/2018/02/01/Http-Chapter-1/IP.png\" alt=\"\"></p>\n<h3 id=\"确保可靠性的-TCP-协议\"><a href=\"#确保可靠性的-TCP-协议\" class=\"headerlink\" title=\"确保可靠性的 TCP 协议\"></a>确保可靠性的 TCP 协议</h3><p>为了准确无误地将数据送达目标处，TCP 协议采用了三次握手（three-way handshaking）策略。<br><img src=\"/2018/02/01/Http-Chapter-1/TCP.png\" alt=\"\"></p>\n<h3 id=\"负责域名解析的-DNS-服务\"><a href=\"#负责域名解析的-DNS-服务\" class=\"headerlink\" title=\"负责域名解析的 DNS 服务\"></a>负责域名解析的 DNS 服务</h3><p>DNS（Domain Name System）服务是和HTTP协议一样位于应用层的协议。它提供域名到 IP 地址之间的解析服务。<br><img src=\"/2018/02/01/Http-Chapter-1/DNS.png\" alt=\"\"></p>\n<h2 id=\"各种协议与-HTTP-协议的关系\"><a href=\"#各种协议与-HTTP-协议的关系\" class=\"headerlink\" title=\"各种协议与 HTTP 协议的关系\"></a>各种协议与 HTTP 协议的关系</h2><p><img src=\"/2018/02/01/Http-Chapter-1/HTTP-TCPIP-DNS.png\" alt=\"\"></p>\n<h2 id=\"URI-和-URL\"><a href=\"#URI-和-URL\" class=\"headerlink\" title=\"URI 和 URL\"></a>URI 和 URL</h2><p><code>URI</code>：统一资源标识符(Uniform Resource Indentifier)用来标识服务器上的资源。<br><code>URL</code>:统一资源定位符(Uniform Resouce Locator)是资源标识符最常见的表示格式。<br>URL时URI的子集。<br>区别：URI 定义资源，而 URL 不单定义这个资源，还定义了如何找到这个资源（即访问资源的方式）。</p>\n<p><strong>参考：</strong><br><a href=\"https://www.zhihu.com/question/21950864\" target=\"_blank\" rel=\"noopener\">《HTTP 协议中 URI 和 URL 有什么区别？》</a></p>\n<h3 id=\"绝对-URI-格式\"><a href=\"#绝对-URI-格式\" class=\"headerlink\" title=\"绝对 URI 格式\"></a>绝对 URI 格式</h3><p><img src=\"/2018/02/01/Http-Chapter-1/URI.png\" alt=\"\"></p>\n<h2 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h2><p><a href=\"https://book.douban.com/subject/25863515/\" target=\"_blank\" rel=\"noopener\">《图解HTTP》</a></p>"},{"title":"简单 HTTP 协议","date":"2018-02-01T13:00:40.000Z","_content":"# 简单的 HTTP 协议\n\n## 1. HTTP 协议用于客户端与服务端之间的通信\n\n请求访问文本或图像等资源的一端称为`客户端`，而提供资源响应的一端称为`服务器端`。\n在两台计算机之间使用 HTTP 协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。\n\n## 2. 通过请求和响应的交换达成通信\n\n### 2.1 请求报文--客户端\n\n![请求报文的构成](Http-Chapter-2/request-URI.png \"请求报文的构成\")\n请求报文是由`请求方法`、`请求 URI`、`协议版本`、`可选的请求首部字段`和`内容实体`构成的。\n<!-- more -->\n\n### 2.2 响应报文--服务端\n\n![响应报文的构成](Http-Chapter-2/answer.png \"响应报文的构成\")\n响应报文基本上由`协议版本`、`状态码`（表示请求成功或失败的数字代码）、用以解释状态码的`原因短语`、`可选的响应首部字段`以及实体`主体`构成。\n\n## 3. HTTP 是不保存状态的协议\n\nHTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在HTTP这个级别，协议对于发送过的请求或响应都不做持久化处理。\nHTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用HTTP协议通信，就可以管理状态了。\n\n## 4. 请求 URI 定位资源\n\n![URI定位资源](Http-Chapter-2/HTTP-URI.png \"HTTP协议使用URI让客户端定位到资源\")\n\n## 5. 告知服务器意图的 HTTP 方法\n\n- <a href=\"#1\">GET：获取资源 :point_down:</a>\n- <a href=\"#2\">POST：传输实体主体 :point_down:</a>\n- <a href=\"#3\">PUT：传输文件 :point_down:</a>\n- <a href=\"#4\">HEAD：获得报文首部 :point_down:</a>\n- <a href=\"#5\">DELETE：删除文件 :point_down:</a>\n- <a href=\"#6\">OPTIONS：询问支持的方法 :point_down:</a>\n- <a href=\"#7\">TRACE：追踪路径 :point_down:</a>\n- <a href=\"#8\">CONNECT：要求用隧道协议连接代理 :point_down:</a>\n\n### 5.1 <a name=\"1\">GET：获取资源</a>\n\nGET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器端解析后返回响应内容。\n![GET 方法](Http-Chapter-2/GET.png \"使用 GET 方法请求-响应的例子\")\n\n### 5.2 <a name=\"2\">POST：传输实体主体</a>\n\nPOST 方法用来传输实体的主体。相对于 GET 方法的“我想要向服务器访问某个资源” POST 方法则是“我要把这条信息告诉给服务器”。\n![POST 方法](Http-Chapter-2/GET.png \"使用 POST 方法请求-响应的例子\")\n\n### 5.3 <a name=\"3\">PUT：传输文件</a>\n\nPUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请求报文的主体中包含文件内容，然后保存到请求URI 指定的位置。\n![PUT 方法](Http-Chapter-2/PUT.png \"使用 PUT 方法请求-响应的例子\")\n\n### 5.4 <a name=\"4\">HEAD：获得报文首部</a>\n\n用于确认 URI 的有效性及资源更新的日期时间等。\n![HEAD 方法](Http-Chapter-2/HEAD.png \"使用 PUHEADT 方法请求-响应的例子\")\n\n### 5.5 <a name=\"5\">DELETE：删除文件</a>\n\nDELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按请求 URI 删除指定的资源。\n![DELETE 方法](Http-Chapter-2/DELETE.png \"使用 DELETE 方法请求-响应的例子\")\n\n### 5.6 <a name=\"6\">OPTIONS：询问支持的方法</a>\n\nOPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。\n![OPTIONS 方法](Http-Chapter-2/DELETE.png \"使用 OPTIONS 方法请求-响应的例子\")\n\n### 5.7 <a name=\"7\">TRACE：追踪路径</a>\n\nTRACE 方法是让 Web 服务器端将之前的请求通信环回给客户端的方法。\n![TRACE 图解](Http-Chapter-2/TRACE-1.png \"TEACE 图解\")\n但是，TRACE 方法本来就不怎么常用，再加上它容易引发 XST（Cross-Site Tracing，跨站追踪）攻击，通常就更不会用到了。\n![TRACE 方法](Http-Chapter-2/TRACE-2.png \"使用 TRACE 方法请求-响应的例子\")\n\n### 5.8 <a name=\"8\">CONNECT：要求用隧道协议连接代理</a>\n\nCONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输。\n```\n// CONNCET 格式\nCONNCET 代理服务器名：端口号 HTTP版本\n```\n![CONNECT 方法](Http-Chapter-2/CONNECT.png \"使用 CONNECT 方法请求-响应的例子\")\n\n## 6. 持久连接节省通信量\n\n在 HTTP 的初始版本中，每进行一次 HTTP 通信就要断开一次 TCP 连接。这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。\n![HTTP-TCP](Http-Chapter-2/HTTP-TCP.png \"HTTP 初始版本中的请求图\")\n这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。\n![HTTP-TCP](Http-Chapter-2/HTTP-TCP-2.png \"HTTP 初始版本中的请求图\")\n\n### 6.1 持久连接\n\n为了解决上述的问题，出现了`持久链接`的方法（HTTP Persistent Connections，也称为`HTTP keep-alive` 或 `HTTP connection reuse`）的方法。特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接。\n![HTTP-Persistent-Connections](Http-Chapter-2/HTTP-Persistent-Connections.png \"图：持久连接旨在建立1 次TCP 连接后进行多次请求和响应的交互\")\n\n### 6.2 管线化\n\n`管线化技术`：持续连接使得多数请求以管线化方式发送。这样可以做到同时并行发送多个请求，而不需要一个接一个地等待响应了。\n![pipelining](Http-Chapter-2/pipelining.png \"图：不等待响应，直接发送下一个请求\")\n\n## 7. 使用Cookie 的状态管理\n\nHTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie使基于无状态的HTTP协议记录稳定的状态信息成为了可能。\nCookie 主要用于三个方面：\n\n- 会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）\n- 个性化设置（如用户自定义设置、主题等）\n- 浏览器行为跟踪（如跟踪分析用户行为等）\n\n### 参考：\n\n[《HTTP cookies》](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies)\n[《聊一聊 cookie》](https://segmentfault.com/a/1190000004556040)","source":"_posts/Http-Chapter-2.md","raw":"---\ntitle: 简单 HTTP 协议\ndate: 2018-02-01 21:00:40\ncategories:\n- Web\n- HTTP\n- 图解HTTP-笔记\ntags:\n- Web\n- HTTP\n- 学习笔记\n---\n# 简单的 HTTP 协议\n\n## 1. HTTP 协议用于客户端与服务端之间的通信\n\n请求访问文本或图像等资源的一端称为`客户端`，而提供资源响应的一端称为`服务器端`。\n在两台计算机之间使用 HTTP 协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。\n\n## 2. 通过请求和响应的交换达成通信\n\n### 2.1 请求报文--客户端\n\n![请求报文的构成](Http-Chapter-2/request-URI.png \"请求报文的构成\")\n请求报文是由`请求方法`、`请求 URI`、`协议版本`、`可选的请求首部字段`和`内容实体`构成的。\n<!-- more -->\n\n### 2.2 响应报文--服务端\n\n![响应报文的构成](Http-Chapter-2/answer.png \"响应报文的构成\")\n响应报文基本上由`协议版本`、`状态码`（表示请求成功或失败的数字代码）、用以解释状态码的`原因短语`、`可选的响应首部字段`以及实体`主体`构成。\n\n## 3. HTTP 是不保存状态的协议\n\nHTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在HTTP这个级别，协议对于发送过的请求或响应都不做持久化处理。\nHTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用HTTP协议通信，就可以管理状态了。\n\n## 4. 请求 URI 定位资源\n\n![URI定位资源](Http-Chapter-2/HTTP-URI.png \"HTTP协议使用URI让客户端定位到资源\")\n\n## 5. 告知服务器意图的 HTTP 方法\n\n- <a href=\"#1\">GET：获取资源 :point_down:</a>\n- <a href=\"#2\">POST：传输实体主体 :point_down:</a>\n- <a href=\"#3\">PUT：传输文件 :point_down:</a>\n- <a href=\"#4\">HEAD：获得报文首部 :point_down:</a>\n- <a href=\"#5\">DELETE：删除文件 :point_down:</a>\n- <a href=\"#6\">OPTIONS：询问支持的方法 :point_down:</a>\n- <a href=\"#7\">TRACE：追踪路径 :point_down:</a>\n- <a href=\"#8\">CONNECT：要求用隧道协议连接代理 :point_down:</a>\n\n### 5.1 <a name=\"1\">GET：获取资源</a>\n\nGET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器端解析后返回响应内容。\n![GET 方法](Http-Chapter-2/GET.png \"使用 GET 方法请求-响应的例子\")\n\n### 5.2 <a name=\"2\">POST：传输实体主体</a>\n\nPOST 方法用来传输实体的主体。相对于 GET 方法的“我想要向服务器访问某个资源” POST 方法则是“我要把这条信息告诉给服务器”。\n![POST 方法](Http-Chapter-2/GET.png \"使用 POST 方法请求-响应的例子\")\n\n### 5.3 <a name=\"3\">PUT：传输文件</a>\n\nPUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请求报文的主体中包含文件内容，然后保存到请求URI 指定的位置。\n![PUT 方法](Http-Chapter-2/PUT.png \"使用 PUT 方法请求-响应的例子\")\n\n### 5.4 <a name=\"4\">HEAD：获得报文首部</a>\n\n用于确认 URI 的有效性及资源更新的日期时间等。\n![HEAD 方法](Http-Chapter-2/HEAD.png \"使用 PUHEADT 方法请求-响应的例子\")\n\n### 5.5 <a name=\"5\">DELETE：删除文件</a>\n\nDELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按请求 URI 删除指定的资源。\n![DELETE 方法](Http-Chapter-2/DELETE.png \"使用 DELETE 方法请求-响应的例子\")\n\n### 5.6 <a name=\"6\">OPTIONS：询问支持的方法</a>\n\nOPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。\n![OPTIONS 方法](Http-Chapter-2/DELETE.png \"使用 OPTIONS 方法请求-响应的例子\")\n\n### 5.7 <a name=\"7\">TRACE：追踪路径</a>\n\nTRACE 方法是让 Web 服务器端将之前的请求通信环回给客户端的方法。\n![TRACE 图解](Http-Chapter-2/TRACE-1.png \"TEACE 图解\")\n但是，TRACE 方法本来就不怎么常用，再加上它容易引发 XST（Cross-Site Tracing，跨站追踪）攻击，通常就更不会用到了。\n![TRACE 方法](Http-Chapter-2/TRACE-2.png \"使用 TRACE 方法请求-响应的例子\")\n\n### 5.8 <a name=\"8\">CONNECT：要求用隧道协议连接代理</a>\n\nCONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输。\n```\n// CONNCET 格式\nCONNCET 代理服务器名：端口号 HTTP版本\n```\n![CONNECT 方法](Http-Chapter-2/CONNECT.png \"使用 CONNECT 方法请求-响应的例子\")\n\n## 6. 持久连接节省通信量\n\n在 HTTP 的初始版本中，每进行一次 HTTP 通信就要断开一次 TCP 连接。这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。\n![HTTP-TCP](Http-Chapter-2/HTTP-TCP.png \"HTTP 初始版本中的请求图\")\n这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。\n![HTTP-TCP](Http-Chapter-2/HTTP-TCP-2.png \"HTTP 初始版本中的请求图\")\n\n### 6.1 持久连接\n\n为了解决上述的问题，出现了`持久链接`的方法（HTTP Persistent Connections，也称为`HTTP keep-alive` 或 `HTTP connection reuse`）的方法。特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接。\n![HTTP-Persistent-Connections](Http-Chapter-2/HTTP-Persistent-Connections.png \"图：持久连接旨在建立1 次TCP 连接后进行多次请求和响应的交互\")\n\n### 6.2 管线化\n\n`管线化技术`：持续连接使得多数请求以管线化方式发送。这样可以做到同时并行发送多个请求，而不需要一个接一个地等待响应了。\n![pipelining](Http-Chapter-2/pipelining.png \"图：不等待响应，直接发送下一个请求\")\n\n## 7. 使用Cookie 的状态管理\n\nHTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie使基于无状态的HTTP协议记录稳定的状态信息成为了可能。\nCookie 主要用于三个方面：\n\n- 会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）\n- 个性化设置（如用户自定义设置、主题等）\n- 浏览器行为跟踪（如跟踪分析用户行为等）\n\n### 参考：\n\n[《HTTP cookies》](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies)\n[《聊一聊 cookie》](https://segmentfault.com/a/1190000004556040)","slug":"Http-Chapter-2","published":1,"updated":"2018-02-09T03:41:04.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdfl37ds0007z0tft9g2xgpf","content":"<h1 id=\"简单的-HTTP-协议\"><a href=\"#简单的-HTTP-协议\" class=\"headerlink\" title=\"简单的 HTTP 协议\"></a>简单的 HTTP 协议</h1><h2 id=\"1-HTTP-协议用于客户端与服务端之间的通信\"><a href=\"#1-HTTP-协议用于客户端与服务端之间的通信\" class=\"headerlink\" title=\"1. HTTP 协议用于客户端与服务端之间的通信\"></a>1. HTTP 协议用于客户端与服务端之间的通信</h2><p>请求访问文本或图像等资源的一端称为<code>客户端</code>，而提供资源响应的一端称为<code>服务器端</code>。<br>在两台计算机之间使用 HTTP 协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。</p>\n<h2 id=\"2-通过请求和响应的交换达成通信\"><a href=\"#2-通过请求和响应的交换达成通信\" class=\"headerlink\" title=\"2. 通过请求和响应的交换达成通信\"></a>2. 通过请求和响应的交换达成通信</h2><h3 id=\"2-1-请求报文–客户端\"><a href=\"#2-1-请求报文–客户端\" class=\"headerlink\" title=\"2.1 请求报文–客户端\"></a>2.1 请求报文–客户端</h3><p><img src=\"/2018/02/01/Http-Chapter-2/request-URI.png\" alt=\"请求报文的构成\" title=\"请求报文的构成\"><br>请求报文是由<code>请求方法</code>、<code>请求 URI</code>、<code>协议版本</code>、<code>可选的请求首部字段</code>和<code>内容实体</code>构成的。<br><a id=\"more\"></a></p>\n<h3 id=\"2-2-响应报文–服务端\"><a href=\"#2-2-响应报文–服务端\" class=\"headerlink\" title=\"2.2 响应报文–服务端\"></a>2.2 响应报文–服务端</h3><p><img src=\"/2018/02/01/Http-Chapter-2/answer.png\" alt=\"响应报文的构成\" title=\"响应报文的构成\"><br>响应报文基本上由<code>协议版本</code>、<code>状态码</code>（表示请求成功或失败的数字代码）、用以解释状态码的<code>原因短语</code>、<code>可选的响应首部字段</code>以及实体<code>主体</code>构成。</p>\n<h2 id=\"3-HTTP-是不保存状态的协议\"><a href=\"#3-HTTP-是不保存状态的协议\" class=\"headerlink\" title=\"3. HTTP 是不保存状态的协议\"></a>3. HTTP 是不保存状态的协议</h2><p>HTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在HTTP这个级别，协议对于发送过的请求或响应都不做持久化处理。<br>HTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用HTTP协议通信，就可以管理状态了。</p>\n<h2 id=\"4-请求-URI-定位资源\"><a href=\"#4-请求-URI-定位资源\" class=\"headerlink\" title=\"4. 请求 URI 定位资源\"></a>4. 请求 URI 定位资源</h2><p><img src=\"/2018/02/01/Http-Chapter-2/HTTP-URI.png\" alt=\"URI定位资源\" title=\"HTTP协议使用URI让客户端定位到资源\"></p>\n<h2 id=\"5-告知服务器意图的-HTTP-方法\"><a href=\"#5-告知服务器意图的-HTTP-方法\" class=\"headerlink\" title=\"5. 告知服务器意图的 HTTP 方法\"></a>5. 告知服务器意图的 HTTP 方法</h2><ul>\n<li><a href=\"#1\">GET：获取资源 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#2\">POST：传输实体主体 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#3\">PUT：传输文件 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#4\">HEAD：获得报文首部 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#5\">DELETE：删除文件 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#6\">OPTIONS：询问支持的方法 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#7\">TRACE：追踪路径 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#8\">CONNECT：要求用隧道协议连接代理 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n</ul>\n<h3 id=\"5-1-GET：获取资源\"><a href=\"#5-1-GET：获取资源\" class=\"headerlink\" title=\"5.1 GET：获取资源\"></a>5.1 <a name=\"1\">GET：获取资源</a></h3><p>GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器端解析后返回响应内容。<br><img src=\"/2018/02/01/Http-Chapter-2/GET.png\" alt=\"GET 方法\" title=\"使用 GET 方法请求-响应的例子\"></p>\n<h3 id=\"5-2-POST：传输实体主体\"><a href=\"#5-2-POST：传输实体主体\" class=\"headerlink\" title=\"5.2 POST：传输实体主体\"></a>5.2 <a name=\"2\">POST：传输实体主体</a></h3><p>POST 方法用来传输实体的主体。相对于 GET 方法的“我想要向服务器访问某个资源” POST 方法则是“我要把这条信息告诉给服务器”。<br><img src=\"/2018/02/01/Http-Chapter-2/GET.png\" alt=\"POST 方法\" title=\"使用 POST 方法请求-响应的例子\"></p>\n<h3 id=\"5-3-PUT：传输文件\"><a href=\"#5-3-PUT：传输文件\" class=\"headerlink\" title=\"5.3 PUT：传输文件\"></a>5.3 <a name=\"3\">PUT：传输文件</a></h3><p>PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请求报文的主体中包含文件内容，然后保存到请求URI 指定的位置。<br><img src=\"/2018/02/01/Http-Chapter-2/PUT.png\" alt=\"PUT 方法\" title=\"使用 PUT 方法请求-响应的例子\"></p>\n<h3 id=\"5-4-HEAD：获得报文首部\"><a href=\"#5-4-HEAD：获得报文首部\" class=\"headerlink\" title=\"5.4 HEAD：获得报文首部\"></a>5.4 <a name=\"4\">HEAD：获得报文首部</a></h3><p>用于确认 URI 的有效性及资源更新的日期时间等。<br><img src=\"/2018/02/01/Http-Chapter-2/HEAD.png\" alt=\"HEAD 方法\" title=\"使用 PUHEADT 方法请求-响应的例子\"></p>\n<h3 id=\"5-5-DELETE：删除文件\"><a href=\"#5-5-DELETE：删除文件\" class=\"headerlink\" title=\"5.5 DELETE：删除文件\"></a>5.5 <a name=\"5\">DELETE：删除文件</a></h3><p>DELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按请求 URI 删除指定的资源。<br><img src=\"/2018/02/01/Http-Chapter-2/DELETE.png\" alt=\"DELETE 方法\" title=\"使用 DELETE 方法请求-响应的例子\"></p>\n<h3 id=\"5-6-OPTIONS：询问支持的方法\"><a href=\"#5-6-OPTIONS：询问支持的方法\" class=\"headerlink\" title=\"5.6 OPTIONS：询问支持的方法\"></a>5.6 <a name=\"6\">OPTIONS：询问支持的方法</a></h3><p>OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。<br><img src=\"/2018/02/01/Http-Chapter-2/DELETE.png\" alt=\"OPTIONS 方法\" title=\"使用 OPTIONS 方法请求-响应的例子\"></p>\n<h3 id=\"5-7-TRACE：追踪路径\"><a href=\"#5-7-TRACE：追踪路径\" class=\"headerlink\" title=\"5.7 TRACE：追踪路径\"></a>5.7 <a name=\"7\">TRACE：追踪路径</a></h3><p>TRACE 方法是让 Web 服务器端将之前的请求通信环回给客户端的方法。<br><img src=\"/2018/02/01/Http-Chapter-2/TRACE-1.png\" alt=\"TRACE 图解\" title=\"TEACE 图解\"><br>但是，TRACE 方法本来就不怎么常用，再加上它容易引发 XST（Cross-Site Tracing，跨站追踪）攻击，通常就更不会用到了。<br><img src=\"/2018/02/01/Http-Chapter-2/TRACE-2.png\" alt=\"TRACE 方法\" title=\"使用 TRACE 方法请求-响应的例子\"></p>\n<h3 id=\"5-8-CONNECT：要求用隧道协议连接代理\"><a href=\"#5-8-CONNECT：要求用隧道协议连接代理\" class=\"headerlink\" title=\"5.8 CONNECT：要求用隧道协议连接代理\"></a>5.8 <a name=\"8\">CONNECT：要求用隧道协议连接代理</a></h3><p>CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输。<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CONNCET 格式</span></span><br><span class=\"line\">CONNCET 代理服务器名：端口号 HTTP版本</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2018/02/01/Http-Chapter-2/CONNECT.png\" alt=\"CONNECT 方法\" title=\"使用 CONNECT 方法请求-响应的例子\"></p>\n<h2 id=\"6-持久连接节省通信量\"><a href=\"#6-持久连接节省通信量\" class=\"headerlink\" title=\"6. 持久连接节省通信量\"></a>6. 持久连接节省通信量</h2><p>在 HTTP 的初始版本中，每进行一次 HTTP 通信就要断开一次 TCP 连接。这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。<br><img src=\"/2018/02/01/Http-Chapter-2/HTTP-TCP.png\" alt=\"HTTP-TCP\" title=\"HTTP 初始版本中的请求图\"><br>这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。<br><img src=\"/2018/02/01/Http-Chapter-2/HTTP-TCP-2.png\" alt=\"HTTP-TCP\" title=\"HTTP 初始版本中的请求图\"></p>\n<h3 id=\"6-1-持久连接\"><a href=\"#6-1-持久连接\" class=\"headerlink\" title=\"6.1 持久连接\"></a>6.1 持久连接</h3><p>为了解决上述的问题，出现了<code>持久链接</code>的方法（HTTP Persistent Connections，也称为<code>HTTP keep-alive</code> 或 <code>HTTP connection reuse</code>）的方法。特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接。<br><img src=\"/2018/02/01/Http-Chapter-2/HTTP-Persistent-Connections.png\" alt=\"HTTP-Persistent-Connections\" title=\"图：持久连接旨在建立1 次TCP 连接后进行多次请求和响应的交互\"></p>\n<h3 id=\"6-2-管线化\"><a href=\"#6-2-管线化\" class=\"headerlink\" title=\"6.2 管线化\"></a>6.2 管线化</h3><p><code>管线化技术</code>：持续连接使得多数请求以管线化方式发送。这样可以做到同时并行发送多个请求，而不需要一个接一个地等待响应了。<br><img src=\"/2018/02/01/Http-Chapter-2/pipelining.png\" alt=\"pipelining\" title=\"图：不等待响应，直接发送下一个请求\"></p>\n<h2 id=\"7-使用Cookie-的状态管理\"><a href=\"#7-使用Cookie-的状态管理\" class=\"headerlink\" title=\"7. 使用Cookie 的状态管理\"></a>7. 使用Cookie 的状态管理</h2><p>HTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie使基于无状态的HTTP协议记录稳定的状态信息成为了可能。<br>Cookie 主要用于三个方面：</p>\n<ul>\n<li>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</li>\n<li>个性化设置（如用户自定义设置、主题等）</li>\n<li>浏览器行为跟踪（如跟踪分析用户行为等）</li>\n</ul>\n<h3 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h3><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"noopener\">《HTTP cookies》</a><br><a href=\"https://segmentfault.com/a/1190000004556040\" target=\"_blank\" rel=\"noopener\">《聊一聊 cookie》</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"简单的-HTTP-协议\"><a href=\"#简单的-HTTP-协议\" class=\"headerlink\" title=\"简单的 HTTP 协议\"></a>简单的 HTTP 协议</h1><h2 id=\"1-HTTP-协议用于客户端与服务端之间的通信\"><a href=\"#1-HTTP-协议用于客户端与服务端之间的通信\" class=\"headerlink\" title=\"1. HTTP 协议用于客户端与服务端之间的通信\"></a>1. HTTP 协议用于客户端与服务端之间的通信</h2><p>请求访问文本或图像等资源的一端称为<code>客户端</code>，而提供资源响应的一端称为<code>服务器端</code>。<br>在两台计算机之间使用 HTTP 协议通信时，在一条通信线路上必定有一端是客户端，另一端则是服务器端。</p>\n<h2 id=\"2-通过请求和响应的交换达成通信\"><a href=\"#2-通过请求和响应的交换达成通信\" class=\"headerlink\" title=\"2. 通过请求和响应的交换达成通信\"></a>2. 通过请求和响应的交换达成通信</h2><h3 id=\"2-1-请求报文–客户端\"><a href=\"#2-1-请求报文–客户端\" class=\"headerlink\" title=\"2.1 请求报文–客户端\"></a>2.1 请求报文–客户端</h3><p><img src=\"/2018/02/01/Http-Chapter-2/request-URI.png\" alt=\"请求报文的构成\" title=\"请求报文的构成\"><br>请求报文是由<code>请求方法</code>、<code>请求 URI</code>、<code>协议版本</code>、<code>可选的请求首部字段</code>和<code>内容实体</code>构成的。<br></p>","more":"<p></p>\n<h3 id=\"2-2-响应报文–服务端\"><a href=\"#2-2-响应报文–服务端\" class=\"headerlink\" title=\"2.2 响应报文–服务端\"></a>2.2 响应报文–服务端</h3><p><img src=\"/2018/02/01/Http-Chapter-2/answer.png\" alt=\"响应报文的构成\" title=\"响应报文的构成\"><br>响应报文基本上由<code>协议版本</code>、<code>状态码</code>（表示请求成功或失败的数字代码）、用以解释状态码的<code>原因短语</code>、<code>可选的响应首部字段</code>以及实体<code>主体</code>构成。</p>\n<h2 id=\"3-HTTP-是不保存状态的协议\"><a href=\"#3-HTTP-是不保存状态的协议\" class=\"headerlink\" title=\"3. HTTP 是不保存状态的协议\"></a>3. HTTP 是不保存状态的协议</h2><p>HTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在HTTP这个级别，协议对于发送过的请求或响应都不做持久化处理。<br>HTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用HTTP协议通信，就可以管理状态了。</p>\n<h2 id=\"4-请求-URI-定位资源\"><a href=\"#4-请求-URI-定位资源\" class=\"headerlink\" title=\"4. 请求 URI 定位资源\"></a>4. 请求 URI 定位资源</h2><p><img src=\"/2018/02/01/Http-Chapter-2/HTTP-URI.png\" alt=\"URI定位资源\" title=\"HTTP协议使用URI让客户端定位到资源\"></p>\n<h2 id=\"5-告知服务器意图的-HTTP-方法\"><a href=\"#5-告知服务器意图的-HTTP-方法\" class=\"headerlink\" title=\"5. 告知服务器意图的 HTTP 方法\"></a>5. 告知服务器意图的 HTTP 方法</h2><ul>\n<li><a href=\"#1\">GET：获取资源 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#2\">POST：传输实体主体 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#3\">PUT：传输文件 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#4\">HEAD：获得报文首部 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#5\">DELETE：删除文件 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#6\">OPTIONS：询问支持的方法 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#7\">TRACE：追踪路径 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n<li><a href=\"#8\">CONNECT：要求用隧道协议连接代理 <span class=\"github-emoji\" title=\"point_down\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f447.png?v7\">&#x1f447;</span></a></li>\n</ul>\n<h3 id=\"5-1-GET：获取资源\"><a href=\"#5-1-GET：获取资源\" class=\"headerlink\" title=\"5.1 GET：获取资源\"></a>5.1 <a name=\"1\">GET：获取资源</a></h3><p>GET 方法用来请求访问已被 URI 识别的资源。指定的资源经服务器端解析后返回响应内容。<br><img src=\"/2018/02/01/Http-Chapter-2/GET.png\" alt=\"GET 方法\" title=\"使用 GET 方法请求-响应的例子\"></p>\n<h3 id=\"5-2-POST：传输实体主体\"><a href=\"#5-2-POST：传输实体主体\" class=\"headerlink\" title=\"5.2 POST：传输实体主体\"></a>5.2 <a name=\"2\">POST：传输实体主体</a></h3><p>POST 方法用来传输实体的主体。相对于 GET 方法的“我想要向服务器访问某个资源” POST 方法则是“我要把这条信息告诉给服务器”。<br><img src=\"/2018/02/01/Http-Chapter-2/GET.png\" alt=\"POST 方法\" title=\"使用 POST 方法请求-响应的例子\"></p>\n<h3 id=\"5-3-PUT：传输文件\"><a href=\"#5-3-PUT：传输文件\" class=\"headerlink\" title=\"5.3 PUT：传输文件\"></a>5.3 <a name=\"3\">PUT：传输文件</a></h3><p>PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请求报文的主体中包含文件内容，然后保存到请求URI 指定的位置。<br><img src=\"/2018/02/01/Http-Chapter-2/PUT.png\" alt=\"PUT 方法\" title=\"使用 PUT 方法请求-响应的例子\"></p>\n<h3 id=\"5-4-HEAD：获得报文首部\"><a href=\"#5-4-HEAD：获得报文首部\" class=\"headerlink\" title=\"5.4 HEAD：获得报文首部\"></a>5.4 <a name=\"4\">HEAD：获得报文首部</a></h3><p>用于确认 URI 的有效性及资源更新的日期时间等。<br><img src=\"/2018/02/01/Http-Chapter-2/HEAD.png\" alt=\"HEAD 方法\" title=\"使用 PUHEADT 方法请求-响应的例子\"></p>\n<h3 id=\"5-5-DELETE：删除文件\"><a href=\"#5-5-DELETE：删除文件\" class=\"headerlink\" title=\"5.5 DELETE：删除文件\"></a>5.5 <a name=\"5\">DELETE：删除文件</a></h3><p>DELETE 方法用来删除文件，是与 PUT 相反的方法。DELETE 方法按请求 URI 删除指定的资源。<br><img src=\"/2018/02/01/Http-Chapter-2/DELETE.png\" alt=\"DELETE 方法\" title=\"使用 DELETE 方法请求-响应的例子\"></p>\n<h3 id=\"5-6-OPTIONS：询问支持的方法\"><a href=\"#5-6-OPTIONS：询问支持的方法\" class=\"headerlink\" title=\"5.6 OPTIONS：询问支持的方法\"></a>5.6 <a name=\"6\">OPTIONS：询问支持的方法</a></h3><p>OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。<br><img src=\"/2018/02/01/Http-Chapter-2/DELETE.png\" alt=\"OPTIONS 方法\" title=\"使用 OPTIONS 方法请求-响应的例子\"></p>\n<h3 id=\"5-7-TRACE：追踪路径\"><a href=\"#5-7-TRACE：追踪路径\" class=\"headerlink\" title=\"5.7 TRACE：追踪路径\"></a>5.7 <a name=\"7\">TRACE：追踪路径</a></h3><p>TRACE 方法是让 Web 服务器端将之前的请求通信环回给客户端的方法。<br><img src=\"/2018/02/01/Http-Chapter-2/TRACE-1.png\" alt=\"TRACE 图解\" title=\"TEACE 图解\"><br>但是，TRACE 方法本来就不怎么常用，再加上它容易引发 XST（Cross-Site Tracing，跨站追踪）攻击，通常就更不会用到了。<br><img src=\"/2018/02/01/Http-Chapter-2/TRACE-2.png\" alt=\"TRACE 方法\" title=\"使用 TRACE 方法请求-响应的例子\"></p>\n<h3 id=\"5-8-CONNECT：要求用隧道协议连接代理\"><a href=\"#5-8-CONNECT：要求用隧道协议连接代理\" class=\"headerlink\" title=\"5.8 CONNECT：要求用隧道协议连接代理\"></a>5.8 <a name=\"8\">CONNECT：要求用隧道协议连接代理</a></h3><p>CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输。<br><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// CONNCET 格式</span></span><br><span class=\"line\">CONNCET 代理服务器名：端口号 HTTP版本</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2018/02/01/Http-Chapter-2/CONNECT.png\" alt=\"CONNECT 方法\" title=\"使用 CONNECT 方法请求-响应的例子\"></p>\n<h2 id=\"6-持久连接节省通信量\"><a href=\"#6-持久连接节省通信量\" class=\"headerlink\" title=\"6. 持久连接节省通信量\"></a>6. 持久连接节省通信量</h2><p>在 HTTP 的初始版本中，每进行一次 HTTP 通信就要断开一次 TCP 连接。这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。<br><img src=\"/2018/02/01/Http-Chapter-2/HTTP-TCP.png\" alt=\"HTTP-TCP\" title=\"HTTP 初始版本中的请求图\"><br>这对于一些容量很小的问本传输没有多大问题，但是随着 HTTP 的普及，文档中的文本和图片越来越多，每次请求都会造成无谓的 TCP 连接和断开，增加通信量的开销。<br><img src=\"/2018/02/01/Http-Chapter-2/HTTP-TCP-2.png\" alt=\"HTTP-TCP\" title=\"HTTP 初始版本中的请求图\"></p>\n<h3 id=\"6-1-持久连接\"><a href=\"#6-1-持久连接\" class=\"headerlink\" title=\"6.1 持久连接\"></a>6.1 持久连接</h3><p>为了解决上述的问题，出现了<code>持久链接</code>的方法（HTTP Persistent Connections，也称为<code>HTTP keep-alive</code> 或 <code>HTTP connection reuse</code>）的方法。特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接。<br><img src=\"/2018/02/01/Http-Chapter-2/HTTP-Persistent-Connections.png\" alt=\"HTTP-Persistent-Connections\" title=\"图：持久连接旨在建立1 次TCP 连接后进行多次请求和响应的交互\"></p>\n<h3 id=\"6-2-管线化\"><a href=\"#6-2-管线化\" class=\"headerlink\" title=\"6.2 管线化\"></a>6.2 管线化</h3><p><code>管线化技术</code>：持续连接使得多数请求以管线化方式发送。这样可以做到同时并行发送多个请求，而不需要一个接一个地等待响应了。<br><img src=\"/2018/02/01/Http-Chapter-2/pipelining.png\" alt=\"pipelining\" title=\"图：不等待响应，直接发送下一个请求\"></p>\n<h2 id=\"7-使用Cookie-的状态管理\"><a href=\"#7-使用Cookie-的状态管理\" class=\"headerlink\" title=\"7. 使用Cookie 的状态管理\"></a>7. 使用Cookie 的状态管理</h2><p>HTTP Cookie（也叫Web Cookie或浏览器Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie使基于无状态的HTTP协议记录稳定的状态信息成为了可能。<br>Cookie 主要用于三个方面：</p>\n<ul>\n<li>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</li>\n<li>个性化设置（如用户自定义设置、主题等）</li>\n<li>浏览器行为跟踪（如跟踪分析用户行为等）</li>\n</ul>\n<h3 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h3><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"noopener\">《HTTP cookies》</a><br><a href=\"https://segmentfault.com/a/1190000004556040\" target=\"_blank\" rel=\"noopener\">《聊一聊 cookie》</a></p>"},{"title":"JavaScript知识点（一）","date":"2017-12-02T11:40:40.000Z","_content":"\n# 变量类型及计算\n## 题目\n### 1. JS中用 `typeof` 得到那些数据类型\n```javascript\ntypeof undefined     // undefined\ntypeof '123'         // string\ntypeof 123           // number\ntypeof true          // boolean\ntypeof {}            // object\ntypeof []            // object\ntypeof null          // object\ntypeof console.log() //function\n```\n> typeof 只能区分值类型\n\n<!-- more -->\n\n### 2. 何时使用 `==` 和 `===`\n```javascript\nif (obj.a == null) {\n    /*\n        这里相当于 obj.a === null || obj.a === undefined, 简写形式\n        这是jQuery源码的推荐写法\n        除此之外都是用 ===\n    */\n}\n\nfunction (a, b) {\n    if (a == null) {\n        // 这里也可以使用 == ,但是 == 之前的变量必须要有定义\n    }\n}\n```\n> ''(空字符串), 0, null, undefined都可以转换为 false\n\n### 3. JS中的内置函数--数据封装对象\n```javascript\nObject\nNumber\nString\nBoolean\nFunction\nArray\nDate\nRegExp\nError\n```\n### 4. JS变量按存储方式区分为那些类型，并描述其特点\n- 值类型\n```js\nvar a = 100;\nvar b = a;\na = 200;\nconsole.log(b) // 100\n```\n- 引用类型：对象、数组、函数（节省内存空间，以指针方式存储）\n```js\nvar obj1 = {x: 20};\nvar obj2 = obj1;\nobj1.x = 30;\nconsole.log(obj2.x) // 30\n```\n### 5. 如何理解JSON\nJSON只是JS的一个内置对象，Math也是\n```js\nJSON.stingify({a: 10, b: 20}) // 对象 -> 字符串\nJSON.parse(\"{'a': 10, 'b': 20}\") // 字符串 -> 对象\n```\n\n# 原型和原型链\n## 知识点\n- 构造函数\n- 构造函数 - 扩展\n- 原型规则和示例\n- 原型链\n- instanceof\n\n### 构造函数\n```js\nfunction Foo(name, age) {\n    this.name = name;\n    this.age = age;\n    this.class = 'class one';\n    //return this  //默认有这一行\n}\n// 创建多个对象\nvar f1 = new Foo('zhansan', 12);\nvar f2 = new Foo('lise', 13);\n```\n### 构造函数的扩展\n- `var a = {}` 其实是 `var a = new Object()` 的语法糖\n- `var a = []` 其实是 `var a = new Array()` 的语法糖\n- `function Foo() {...}` 其实是 `var Foo = new Funcion() {...}` 的语法糖\n- 使用 `instanceof` 判断一个函数是否是一个变量的构造函数\n\n### 原型规则和实例\n- 所有的引用类型（对象、数组、函数），都具有对象特性，即可自由扩展属性（除了”null”以外\n- 所有的引用类型（对象、数组、函数），都有一个proto(隐式原型)属性，属性值是一个普通对象\n- 所有的函数，都有一个prototype(显示原型)属性，属性值是一个普通对象\n- 所有的引用类型（对象、数组、函数），proto属性值指向它的构造函数的 `prototype` 属性值\n- 当试图寻找一个对象（引用类型）的某个属性时，如果这个对象本身没有这个睡醒，那么会去它的proto（即它的构造函数的prototype）中去寻找\n\n```js\n// 所有的引用类型都有可自由扩展属性\nvar obj = {};\nobj.a = 100;\nvar arr =[];\narr.a = 200;\nfunction fn() {};\nfn.a = 100;\n\n// 所有的引用类型都有一个默认的隐式原型属性\nconsole.log(obj._proto_);\nconsole.log(arr._proto_);\nconsole.log(fn._proto_);\n\n// 所有的函数都有一个显示原型的属性\nconsole.log(fn.prototype);\n\n\n// 所有引用类型的_proto_属性值指向它的构造函数的prototype属性值\nconsole.log(obj._proto_ === Object.prototype);\n```\n```js\n// 构造函数\nfunction Foo(name, age) {\n    this.name = name;\n}\nFoo.prototype.alertName = function () {\n    alert(this.name);\n}\n\n// 创建实例\nvar f = new Foo('zhangsan');\nf.printName = function () {\n    console.log(this.name);\n}\n\n// 测试\nf.alertName();\nf.printName();\n\n// 循环对象自身的属性\nvar item;\nfor (item in f) {\n    /*\n        高级浏览器已经在 for in 中屏蔽了来自原型的属性\n        但还是建议加上下面这个判断，保证程序的健壮性\n    */\n    if (f.hasOwnProperty(item)) {\n        console.log(item);\n    }\n}\n\n// 原型链\nf.toString() // 要去 f._proto_._proto_ 中查找\n```\n### instanceof\n用于判断**引用类型**属于哪个**构造函数**的方法\nf `intanceof` Foo 的判断逻辑：\n- `f.proto` 一层一层往上，能否对应到 `Foo.prototype`\n- 再试着判断 `f instanceof Object`\n- 同样在 `f.proto` 一层一层往上找，直到 `Object.prototype`\n\n## 题目\n### 1. 如何准确判断一个变量是数组类型\n```js\nvar arr = [];\narr instanceof Array; // true\ntypeof arr; // Object, typeof 是无法判断是否为数组的\n```\n### 2. 写一个原型链继承的例子\n```js\n// 动物\nfunction Animal() {\n    this.eat = function () {\n        console.log('Animal eat');\n    }\n}\n// 狗\nfunction Dog() {\n    this.bark = function () {\n        console.log('dog bark');\n    }\n}\nDog.prototype = new Animal();\n// 哈士奇\nvar hashiqi = new Dog();\nhashiqi.eat();\nhashiqi.bark();\n```\n> **面试中千万不要上面的例子，应该写更加贴近实战的例子，上面这个例子只是用来理解。**\n\n一个封装DOM查询的例子\n```js\nfunction Elem(id) {\n    this.Elem = document.getElementById(id);\n}\nElem.prototype.html = function (val) {\n    var elem = this. Elem;\n    if (val) {\n        elem.innerHTML = val;\n        return this\n    } else {\n        return elem.innerHTML\n    }\n}\nElem.prototype.on = function (type, fn) {\n    var elem = this.Elem;\n    elem.addEventListener(type, fn);\n    return this\n}\nvar div1 = new Elem('div1');\ndiv.html('<p>hello</p>').on('click', function () {alert('clicked')}).html('<p>JavaScript</p>');\n```\n### 3. 描述 new 一个对象的过程\n- 创建一个新对象\n- this 指向这个新对象\n- 执行代码，即对 this 进行赋值\n- 返回 this\n\n### 4. zepto(或其他框架)源码中如何使用原型链\n- 阅读源码是高效提升技能的方式\n- 但不能“埋头苦研”有技巧在其中，阅读之前在网上先搜索一下资料\n\n\n","source":"_posts/JavaScript.md","raw":"---\ntitle: JavaScript知识点（一）\ndate: 2017-12-02 19:40:40\ncategories:\n- Web\n- 前端\n- JavaScript\ntags:\n- Web\n- 前端\n- JavaScript\n---\n\n# 变量类型及计算\n## 题目\n### 1. JS中用 `typeof` 得到那些数据类型\n```javascript\ntypeof undefined     // undefined\ntypeof '123'         // string\ntypeof 123           // number\ntypeof true          // boolean\ntypeof {}            // object\ntypeof []            // object\ntypeof null          // object\ntypeof console.log() //function\n```\n> typeof 只能区分值类型\n\n<!-- more -->\n\n### 2. 何时使用 `==` 和 `===`\n```javascript\nif (obj.a == null) {\n    /*\n        这里相当于 obj.a === null || obj.a === undefined, 简写形式\n        这是jQuery源码的推荐写法\n        除此之外都是用 ===\n    */\n}\n\nfunction (a, b) {\n    if (a == null) {\n        // 这里也可以使用 == ,但是 == 之前的变量必须要有定义\n    }\n}\n```\n> ''(空字符串), 0, null, undefined都可以转换为 false\n\n### 3. JS中的内置函数--数据封装对象\n```javascript\nObject\nNumber\nString\nBoolean\nFunction\nArray\nDate\nRegExp\nError\n```\n### 4. JS变量按存储方式区分为那些类型，并描述其特点\n- 值类型\n```js\nvar a = 100;\nvar b = a;\na = 200;\nconsole.log(b) // 100\n```\n- 引用类型：对象、数组、函数（节省内存空间，以指针方式存储）\n```js\nvar obj1 = {x: 20};\nvar obj2 = obj1;\nobj1.x = 30;\nconsole.log(obj2.x) // 30\n```\n### 5. 如何理解JSON\nJSON只是JS的一个内置对象，Math也是\n```js\nJSON.stingify({a: 10, b: 20}) // 对象 -> 字符串\nJSON.parse(\"{'a': 10, 'b': 20}\") // 字符串 -> 对象\n```\n\n# 原型和原型链\n## 知识点\n- 构造函数\n- 构造函数 - 扩展\n- 原型规则和示例\n- 原型链\n- instanceof\n\n### 构造函数\n```js\nfunction Foo(name, age) {\n    this.name = name;\n    this.age = age;\n    this.class = 'class one';\n    //return this  //默认有这一行\n}\n// 创建多个对象\nvar f1 = new Foo('zhansan', 12);\nvar f2 = new Foo('lise', 13);\n```\n### 构造函数的扩展\n- `var a = {}` 其实是 `var a = new Object()` 的语法糖\n- `var a = []` 其实是 `var a = new Array()` 的语法糖\n- `function Foo() {...}` 其实是 `var Foo = new Funcion() {...}` 的语法糖\n- 使用 `instanceof` 判断一个函数是否是一个变量的构造函数\n\n### 原型规则和实例\n- 所有的引用类型（对象、数组、函数），都具有对象特性，即可自由扩展属性（除了”null”以外\n- 所有的引用类型（对象、数组、函数），都有一个proto(隐式原型)属性，属性值是一个普通对象\n- 所有的函数，都有一个prototype(显示原型)属性，属性值是一个普通对象\n- 所有的引用类型（对象、数组、函数），proto属性值指向它的构造函数的 `prototype` 属性值\n- 当试图寻找一个对象（引用类型）的某个属性时，如果这个对象本身没有这个睡醒，那么会去它的proto（即它的构造函数的prototype）中去寻找\n\n```js\n// 所有的引用类型都有可自由扩展属性\nvar obj = {};\nobj.a = 100;\nvar arr =[];\narr.a = 200;\nfunction fn() {};\nfn.a = 100;\n\n// 所有的引用类型都有一个默认的隐式原型属性\nconsole.log(obj._proto_);\nconsole.log(arr._proto_);\nconsole.log(fn._proto_);\n\n// 所有的函数都有一个显示原型的属性\nconsole.log(fn.prototype);\n\n\n// 所有引用类型的_proto_属性值指向它的构造函数的prototype属性值\nconsole.log(obj._proto_ === Object.prototype);\n```\n```js\n// 构造函数\nfunction Foo(name, age) {\n    this.name = name;\n}\nFoo.prototype.alertName = function () {\n    alert(this.name);\n}\n\n// 创建实例\nvar f = new Foo('zhangsan');\nf.printName = function () {\n    console.log(this.name);\n}\n\n// 测试\nf.alertName();\nf.printName();\n\n// 循环对象自身的属性\nvar item;\nfor (item in f) {\n    /*\n        高级浏览器已经在 for in 中屏蔽了来自原型的属性\n        但还是建议加上下面这个判断，保证程序的健壮性\n    */\n    if (f.hasOwnProperty(item)) {\n        console.log(item);\n    }\n}\n\n// 原型链\nf.toString() // 要去 f._proto_._proto_ 中查找\n```\n### instanceof\n用于判断**引用类型**属于哪个**构造函数**的方法\nf `intanceof` Foo 的判断逻辑：\n- `f.proto` 一层一层往上，能否对应到 `Foo.prototype`\n- 再试着判断 `f instanceof Object`\n- 同样在 `f.proto` 一层一层往上找，直到 `Object.prototype`\n\n## 题目\n### 1. 如何准确判断一个变量是数组类型\n```js\nvar arr = [];\narr instanceof Array; // true\ntypeof arr; // Object, typeof 是无法判断是否为数组的\n```\n### 2. 写一个原型链继承的例子\n```js\n// 动物\nfunction Animal() {\n    this.eat = function () {\n        console.log('Animal eat');\n    }\n}\n// 狗\nfunction Dog() {\n    this.bark = function () {\n        console.log('dog bark');\n    }\n}\nDog.prototype = new Animal();\n// 哈士奇\nvar hashiqi = new Dog();\nhashiqi.eat();\nhashiqi.bark();\n```\n> **面试中千万不要上面的例子，应该写更加贴近实战的例子，上面这个例子只是用来理解。**\n\n一个封装DOM查询的例子\n```js\nfunction Elem(id) {\n    this.Elem = document.getElementById(id);\n}\nElem.prototype.html = function (val) {\n    var elem = this. Elem;\n    if (val) {\n        elem.innerHTML = val;\n        return this\n    } else {\n        return elem.innerHTML\n    }\n}\nElem.prototype.on = function (type, fn) {\n    var elem = this.Elem;\n    elem.addEventListener(type, fn);\n    return this\n}\nvar div1 = new Elem('div1');\ndiv.html('<p>hello</p>').on('click', function () {alert('clicked')}).html('<p>JavaScript</p>');\n```\n### 3. 描述 new 一个对象的过程\n- 创建一个新对象\n- this 指向这个新对象\n- 执行代码，即对 this 进行赋值\n- 返回 this\n\n### 4. zepto(或其他框架)源码中如何使用原型链\n- 阅读源码是高效提升技能的方式\n- 但不能“埋头苦研”有技巧在其中，阅读之前在网上先搜索一下资料\n\n\n","slug":"JavaScript","published":1,"updated":"2018-02-09T03:39:46.142Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdfl37e10009z0tfp4wf8d43","content":"<h1 id=\"变量类型及计算\"><a href=\"#变量类型及计算\" class=\"headerlink\" title=\"变量类型及计算\"></a>变量类型及计算</h1><h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><h3 id=\"1-JS中用-typeof-得到那些数据类型\"><a href=\"#1-JS中用-typeof-得到那些数据类型\" class=\"headerlink\" title=\"1. JS中用 typeof 得到那些数据类型\"></a>1. JS中用 <code>typeof</code> 得到那些数据类型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span>     <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">'123'</span>         <span class=\"comment\">// string</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">123</span>           <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>          <span class=\"comment\">// boolean</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> &#123;&#125;            <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> []            <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">null</span>          <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">console</span>.log() <span class=\"comment\">//function</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>typeof 只能区分值类型</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"2-何时使用-和\"><a href=\"#2-何时使用-和\" class=\"headerlink\" title=\"2. 何时使用 == 和 ===\"></a>2. 何时使用 <code>==</code> 和 <code>===</code></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (obj.a == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        这里相当于 obj.a === null || obj.a === undefined, 简写形式</span></span><br><span class=\"line\"><span class=\"comment\">        这是jQuery源码的推荐写法</span></span><br><span class=\"line\"><span class=\"comment\">        除此之外都是用 ===</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里也可以使用 == ,但是 == 之前的变量必须要有定义</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>‘’(空字符串), 0, null, undefined都可以转换为 false</p>\n</blockquote>\n<h3 id=\"3-JS中的内置函数–数据封装对象\"><a href=\"#3-JS中的内置函数–数据封装对象\" class=\"headerlink\" title=\"3. JS中的内置函数–数据封装对象\"></a>3. JS中的内置函数–数据封装对象</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span></span><br><span class=\"line\"><span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"built_in\">Boolean</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span></span><br><span class=\"line\"><span class=\"built_in\">Date</span></span><br><span class=\"line\"><span class=\"built_in\">RegExp</span></span><br><span class=\"line\"><span class=\"built_in\">Error</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-JS变量按存储方式区分为那些类型，并描述其特点\"><a href=\"#4-JS变量按存储方式区分为那些类型，并描述其特点\" class=\"headerlink\" title=\"4. JS变量按存储方式区分为那些类型，并描述其特点\"></a>4. JS变量按存储方式区分为那些类型，并描述其特点</h3><ul>\n<li><p>值类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>引用类型：对象、数组、函数（节省内存空间，以指针方式存储）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;<span class=\"attr\">x</span>: <span class=\"number\">20</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = obj1;</span><br><span class=\"line\">obj1.x = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.x) <span class=\"comment\">// 30</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"5-如何理解JSON\"><a href=\"#5-如何理解JSON\" class=\"headerlink\" title=\"5. 如何理解JSON\"></a>5. 如何理解JSON</h3><p>JSON只是JS的一个内置对象，Math也是<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">JSON</span>.stingify(&#123;<span class=\"attr\">a</span>: <span class=\"number\">10</span>, <span class=\"attr\">b</span>: <span class=\"number\">20</span>&#125;) <span class=\"comment\">// 对象 -&gt; 字符串</span></span><br><span class=\"line\"><span class=\"built_in\">JSON</span>.parse(<span class=\"string\">\"&#123;'a': 10, 'b': 20&#125;\"</span>) <span class=\"comment\">// 字符串 -&gt; 对象</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"原型和原型链\"><a href=\"#原型和原型链\" class=\"headerlink\" title=\"原型和原型链\"></a>原型和原型链</h1><h2 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>构造函数</li>\n<li>构造函数 - 扩展</li>\n<li>原型规则和示例</li>\n<li>原型链</li>\n<li>instanceof</li>\n</ul>\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.class = <span class=\"string\">'class one'</span>;</span><br><span class=\"line\">    <span class=\"comment\">//return this  //默认有这一行</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建多个对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = <span class=\"keyword\">new</span> Foo(<span class=\"string\">'zhansan'</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> f2 = <span class=\"keyword\">new</span> Foo(<span class=\"string\">'lise'</span>, <span class=\"number\">13</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"构造函数的扩展\"><a href=\"#构造函数的扩展\" class=\"headerlink\" title=\"构造函数的扩展\"></a>构造函数的扩展</h3><ul>\n<li><code>var a = {}</code> 其实是 <code>var a = new Object()</code> 的语法糖</li>\n<li><code>var a = []</code> 其实是 <code>var a = new Array()</code> 的语法糖</li>\n<li><code>function Foo() {...}</code> 其实是 <code>var Foo = new Funcion() {...}</code> 的语法糖</li>\n<li>使用 <code>instanceof</code> 判断一个函数是否是一个变量的构造函数</li>\n</ul>\n<h3 id=\"原型规则和实例\"><a href=\"#原型规则和实例\" class=\"headerlink\" title=\"原型规则和实例\"></a>原型规则和实例</h3><ul>\n<li>所有的引用类型（对象、数组、函数），都具有对象特性，即可自由扩展属性（除了”null”以外</li>\n<li>所有的引用类型（对象、数组、函数），都有一个proto(隐式原型)属性，属性值是一个普通对象</li>\n<li>所有的函数，都有一个prototype(显示原型)属性，属性值是一个普通对象</li>\n<li>所有的引用类型（对象、数组、函数），proto属性值指向它的构造函数的 <code>prototype</code> 属性值</li>\n<li>当试图寻找一个对象（引用类型）的某个属性时，如果这个对象本身没有这个睡醒，那么会去它的proto（即它的构造函数的prototype）中去寻找</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 所有的引用类型都有可自由扩展属性</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">obj.a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr =[];</span><br><span class=\"line\">arr.a = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\">fn.a = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所有的引用类型都有一个默认的隐式原型属性</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj._proto_);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr._proto_);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fn._proto_);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所有的函数都有一个显示原型的属性</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fn.prototype);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所有引用类型的_proto_属性值指向它的构造函数的prototype属性值</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj._proto_ === <span class=\"built_in\">Object</span>.prototype);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Foo.prototype.alertName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> Foo(<span class=\"string\">'zhangsan'</span>);</span><br><span class=\"line\">f.printName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">f.alertName();</span><br><span class=\"line\">f.printName();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 循环对象自身的属性</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> item;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (item <span class=\"keyword\">in</span> f) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        高级浏览器已经在 for in 中屏蔽了来自原型的属性</span></span><br><span class=\"line\"><span class=\"comment\">        但还是建议加上下面这个判断，保证程序的健壮性</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (f.hasOwnProperty(item)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原型链</span></span><br><span class=\"line\">f.toString() <span class=\"comment\">// 要去 f._proto_._proto_ 中查找</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>用于判断<strong>引用类型</strong>属于哪个<strong>构造函数</strong>的方法<br>f <code>intanceof</code> Foo 的判断逻辑：</p>\n<ul>\n<li><code>f.proto</code> 一层一层往上，能否对应到 <code>Foo.prototype</code></li>\n<li>再试着判断 <code>f instanceof Object</code></li>\n<li>同样在 <code>f.proto</code> 一层一层往上找，直到 <code>Object.prototype</code></li>\n</ul>\n<h2 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h2><h3 id=\"1-如何准确判断一个变量是数组类型\"><a href=\"#1-如何准确判断一个变量是数组类型\" class=\"headerlink\" title=\"1. 如何准确判断一个变量是数组类型\"></a>1. 如何准确判断一个变量是数组类型</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> arr; <span class=\"comment\">// Object, typeof 是无法判断是否为数组的</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-写一个原型链继承的例子\"><a href=\"#2-写一个原型链继承的例子\" class=\"headerlink\" title=\"2. 写一个原型链继承的例子\"></a>2. 写一个原型链继承的例子</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 动物</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Animal</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.eat = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Animal eat'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 狗</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Dog</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bark = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'dog bark'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Dog.prototype = <span class=\"keyword\">new</span> Animal();</span><br><span class=\"line\"><span class=\"comment\">// 哈士奇</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hashiqi = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">hashiqi.eat();</span><br><span class=\"line\">hashiqi.bark();</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>面试中千万不要上面的例子，应该写更加贴近实战的例子，上面这个例子只是用来理解。</strong></p>\n</blockquote>\n<p>一个封装DOM查询的例子<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Elem</span>(<span class=\"params\">id</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Elem = <span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Elem.prototype.html = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"keyword\">this</span>. Elem;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (val) &#123;</span><br><span class=\"line\">        elem.innerHTML = val;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> elem.innerHTML</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Elem.prototype.on = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">type, fn</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"keyword\">this</span>.Elem;</span><br><span class=\"line\">    elem.addEventListener(type, fn);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> div1 = <span class=\"keyword\">new</span> Elem(<span class=\"string\">'div1'</span>);</span><br><span class=\"line\">div.html(<span class=\"string\">'&lt;p&gt;hello&lt;/p&gt;'</span>).on(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;alert(<span class=\"string\">'clicked'</span>)&#125;).html(<span class=\"string\">'&lt;p&gt;JavaScript&lt;/p&gt;'</span>);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-描述-new-一个对象的过程\"><a href=\"#3-描述-new-一个对象的过程\" class=\"headerlink\" title=\"3. 描述 new 一个对象的过程\"></a>3. 描述 new 一个对象的过程</h3><ul>\n<li>创建一个新对象</li>\n<li>this 指向这个新对象</li>\n<li>执行代码，即对 this 进行赋值</li>\n<li>返回 this</li>\n</ul>\n<h3 id=\"4-zepto-或其他框架-源码中如何使用原型链\"><a href=\"#4-zepto-或其他框架-源码中如何使用原型链\" class=\"headerlink\" title=\"4. zepto(或其他框架)源码中如何使用原型链\"></a>4. zepto(或其他框架)源码中如何使用原型链</h3><ul>\n<li>阅读源码是高效提升技能的方式</li>\n<li>但不能“埋头苦研”有技巧在其中，阅读之前在网上先搜索一下资料</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"变量类型及计算\"><a href=\"#变量类型及计算\" class=\"headerlink\" title=\"变量类型及计算\"></a>变量类型及计算</h1><h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><h3 id=\"1-JS中用-typeof-得到那些数据类型\"><a href=\"#1-JS中用-typeof-得到那些数据类型\" class=\"headerlink\" title=\"1. JS中用 typeof 得到那些数据类型\"></a>1. JS中用 <code>typeof</code> 得到那些数据类型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">undefined</span>     <span class=\"comment\">// undefined</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"string\">'123'</span>         <span class=\"comment\">// string</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"number\">123</span>           <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>          <span class=\"comment\">// boolean</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> &#123;&#125;            <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> []            <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"literal\">null</span>          <span class=\"comment\">// object</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> <span class=\"built_in\">console</span>.log() <span class=\"comment\">//function</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>typeof 只能区分值类型</p>\n</blockquote>","more":"<h3 id=\"2-何时使用-和\"><a href=\"#2-何时使用-和\" class=\"headerlink\" title=\"2. 何时使用 == 和 ===\"></a>2. 何时使用 <code>==</code> 和 <code>===</code></h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (obj.a == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        这里相当于 obj.a === null || obj.a === undefined, 简写形式</span></span><br><span class=\"line\"><span class=\"comment\">        这是jQuery源码的推荐写法</span></span><br><span class=\"line\"><span class=\"comment\">        除此之外都是用 ===</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 这里也可以使用 == ,但是 == 之前的变量必须要有定义</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>‘’(空字符串), 0, null, undefined都可以转换为 false</p>\n</blockquote>\n<h3 id=\"3-JS中的内置函数–数据封装对象\"><a href=\"#3-JS中的内置函数–数据封装对象\" class=\"headerlink\" title=\"3. JS中的内置函数–数据封装对象\"></a>3. JS中的内置函数–数据封装对象</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span></span><br><span class=\"line\"><span class=\"built_in\">Number</span></span><br><span class=\"line\"><span class=\"built_in\">String</span></span><br><span class=\"line\"><span class=\"built_in\">Boolean</span></span><br><span class=\"line\"><span class=\"built_in\">Function</span></span><br><span class=\"line\"><span class=\"built_in\">Array</span></span><br><span class=\"line\"><span class=\"built_in\">Date</span></span><br><span class=\"line\"><span class=\"built_in\">RegExp</span></span><br><span class=\"line\"><span class=\"built_in\">Error</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-JS变量按存储方式区分为那些类型，并描述其特点\"><a href=\"#4-JS变量按存储方式区分为那些类型，并描述其特点\" class=\"headerlink\" title=\"4. JS变量按存储方式区分为那些类型，并描述其特点\"></a>4. JS变量按存储方式区分为那些类型，并描述其特点</h3><ul>\n<li><p>值类型</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(b) <span class=\"comment\">// 100</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>引用类型：对象、数组、函数（节省内存空间，以指针方式存储）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj1 = &#123;<span class=\"attr\">x</span>: <span class=\"number\">20</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj2 = obj1;</span><br><span class=\"line\">obj1.x = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj2.x) <span class=\"comment\">// 30</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"5-如何理解JSON\"><a href=\"#5-如何理解JSON\" class=\"headerlink\" title=\"5. 如何理解JSON\"></a>5. 如何理解JSON</h3><p>JSON只是JS的一个内置对象，Math也是<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">JSON</span>.stingify(&#123;<span class=\"attr\">a</span>: <span class=\"number\">10</span>, <span class=\"attr\">b</span>: <span class=\"number\">20</span>&#125;) <span class=\"comment\">// 对象 -&gt; 字符串</span></span><br><span class=\"line\"><span class=\"built_in\">JSON</span>.parse(<span class=\"string\">\"&#123;'a': 10, 'b': 20&#125;\"</span>) <span class=\"comment\">// 字符串 -&gt; 对象</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"原型和原型链\"><a href=\"#原型和原型链\" class=\"headerlink\" title=\"原型和原型链\"></a>原型和原型链</h1><h2 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>构造函数</li>\n<li>构造函数 - 扩展</li>\n<li>原型规则和示例</li>\n<li>原型链</li>\n<li>instanceof</li>\n</ul>\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.class = <span class=\"string\">'class one'</span>;</span><br><span class=\"line\">    <span class=\"comment\">//return this  //默认有这一行</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 创建多个对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f1 = <span class=\"keyword\">new</span> Foo(<span class=\"string\">'zhansan'</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> f2 = <span class=\"keyword\">new</span> Foo(<span class=\"string\">'lise'</span>, <span class=\"number\">13</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"构造函数的扩展\"><a href=\"#构造函数的扩展\" class=\"headerlink\" title=\"构造函数的扩展\"></a>构造函数的扩展</h3><ul>\n<li><code>var a = {}</code> 其实是 <code>var a = new Object()</code> 的语法糖</li>\n<li><code>var a = []</code> 其实是 <code>var a = new Array()</code> 的语法糖</li>\n<li><code>function Foo() {...}</code> 其实是 <code>var Foo = new Funcion() {...}</code> 的语法糖</li>\n<li>使用 <code>instanceof</code> 判断一个函数是否是一个变量的构造函数</li>\n</ul>\n<h3 id=\"原型规则和实例\"><a href=\"#原型规则和实例\" class=\"headerlink\" title=\"原型规则和实例\"></a>原型规则和实例</h3><ul>\n<li>所有的引用类型（对象、数组、函数），都具有对象特性，即可自由扩展属性（除了”null”以外</li>\n<li>所有的引用类型（对象、数组、函数），都有一个proto(隐式原型)属性，属性值是一个普通对象</li>\n<li>所有的函数，都有一个prototype(显示原型)属性，属性值是一个普通对象</li>\n<li>所有的引用类型（对象、数组、函数），proto属性值指向它的构造函数的 <code>prototype</code> 属性值</li>\n<li>当试图寻找一个对象（引用类型）的某个属性时，如果这个对象本身没有这个睡醒，那么会去它的proto（即它的构造函数的prototype）中去寻找</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 所有的引用类型都有可自由扩展属性</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">obj.a = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr =[];</span><br><span class=\"line\">arr.a = <span class=\"number\">200</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span>(<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\">fn.a = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所有的引用类型都有一个默认的隐式原型属性</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj._proto_);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr._proto_);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fn._proto_);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所有的函数都有一个显示原型的属性</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(fn.prototype);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 所有引用类型的_proto_属性值指向它的构造函数的prototype属性值</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj._proto_ === <span class=\"built_in\">Object</span>.prototype);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构造函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Foo</span>(<span class=\"params\">name, age</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Foo.prototype.alertName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    alert(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建实例</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> f = <span class=\"keyword\">new</span> Foo(<span class=\"string\">'zhangsan'</span>);</span><br><span class=\"line\">f.printName = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 测试</span></span><br><span class=\"line\">f.alertName();</span><br><span class=\"line\">f.printName();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 循环对象自身的属性</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> item;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (item <span class=\"keyword\">in</span> f) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        高级浏览器已经在 for in 中屏蔽了来自原型的属性</span></span><br><span class=\"line\"><span class=\"comment\">        但还是建议加上下面这个判断，保证程序的健壮性</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (f.hasOwnProperty(item)) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原型链</span></span><br><span class=\"line\">f.toString() <span class=\"comment\">// 要去 f._proto_._proto_ 中查找</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>用于判断<strong>引用类型</strong>属于哪个<strong>构造函数</strong>的方法<br>f <code>intanceof</code> Foo 的判断逻辑：</p>\n<ul>\n<li><code>f.proto</code> 一层一层往上，能否对应到 <code>Foo.prototype</code></li>\n<li>再试着判断 <code>f instanceof Object</code></li>\n<li>同样在 <code>f.proto</code> 一层一层往上找，直到 <code>Object.prototype</code></li>\n</ul>\n<h2 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h2><h3 id=\"1-如何准确判断一个变量是数组类型\"><a href=\"#1-如何准确判断一个变量是数组类型\" class=\"headerlink\" title=\"1. 如何准确判断一个变量是数组类型\"></a>1. 如何准确判断一个变量是数组类型</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">arr <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>; <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"keyword\">typeof</span> arr; <span class=\"comment\">// Object, typeof 是无法判断是否为数组的</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-写一个原型链继承的例子\"><a href=\"#2-写一个原型链继承的例子\" class=\"headerlink\" title=\"2. 写一个原型链继承的例子\"></a>2. 写一个原型链继承的例子</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 动物</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Animal</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.eat = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'Animal eat'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 狗</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Dog</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bark = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'dog bark'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Dog.prototype = <span class=\"keyword\">new</span> Animal();</span><br><span class=\"line\"><span class=\"comment\">// 哈士奇</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hashiqi = <span class=\"keyword\">new</span> Dog();</span><br><span class=\"line\">hashiqi.eat();</span><br><span class=\"line\">hashiqi.bark();</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>面试中千万不要上面的例子，应该写更加贴近实战的例子，上面这个例子只是用来理解。</strong></p>\n</blockquote>\n<p>一个封装DOM查询的例子<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Elem</span>(<span class=\"params\">id</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.Elem = <span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Elem.prototype.html = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"keyword\">this</span>. Elem;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (val) &#123;</span><br><span class=\"line\">        elem.innerHTML = val;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> elem.innerHTML</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Elem.prototype.on = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">type, fn</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> elem = <span class=\"keyword\">this</span>.Elem;</span><br><span class=\"line\">    elem.addEventListener(type, fn);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> div1 = <span class=\"keyword\">new</span> Elem(<span class=\"string\">'div1'</span>);</span><br><span class=\"line\">div.html(<span class=\"string\">'&lt;p&gt;hello&lt;/p&gt;'</span>).on(<span class=\"string\">'click'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;alert(<span class=\"string\">'clicked'</span>)&#125;).html(<span class=\"string\">'&lt;p&gt;JavaScript&lt;/p&gt;'</span>);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-描述-new-一个对象的过程\"><a href=\"#3-描述-new-一个对象的过程\" class=\"headerlink\" title=\"3. 描述 new 一个对象的过程\"></a>3. 描述 new 一个对象的过程</h3><ul>\n<li>创建一个新对象</li>\n<li>this 指向这个新对象</li>\n<li>执行代码，即对 this 进行赋值</li>\n<li>返回 this</li>\n</ul>\n<h3 id=\"4-zepto-或其他框架-源码中如何使用原型链\"><a href=\"#4-zepto-或其他框架-源码中如何使用原型链\" class=\"headerlink\" title=\"4. zepto(或其他框架)源码中如何使用原型链\"></a>4. zepto(或其他框架)源码中如何使用原型链</h3><ul>\n<li>阅读源码是高效提升技能的方式</li>\n<li>但不能“埋头苦研”有技巧在其中，阅读之前在网上先搜索一下资料</li>\n</ul>"},{"title":"Shadowsocks Setup","date":"2017-10-20T01:35:35.000Z","_content":"\n# 搬瓦工服务器搭建与使用\n花费了一天的时间来搭建搬瓦工服务器一家Shadowsocks的配置，主要过程为：\n- 购买 [搬瓦工服务器](https://bandwagonhost.com/) [国内镜像网站](http://banwagong.cn/)!\n- 在服务器上使用一键安装Shadowsocks功能\n- 客户端上安装Shadosocks软件\n\n<!-- more -->\n\n## 购买BandwagongHost（俗称搬瓦工）服务器\n![](Shadowsocks-setup/bang-website.png)\n购买时选择KVM架构的服务器，因为可以选择安装`centos-6-x86_64-bbr` 系统（默认安装，加速），同时还可以选择其他加速方式，两者的主要区别是：\nOpenVZ advantages:\n- IPv6 support\n- Better CPU performance\nKVM advantages:\n- Full virtualization\n- Custom kernel support (BBR, etc)\n- Docker support\n- Better isolation\n- Better network throughput\n![](Shadowsocks-setup/buy.png)\n点击购买就可以了,可以选择支付宝付款。购买成功之后会选择发送邮件到你注册时使用的邮箱中，具体信息可以登入到网站中查看\n![](Shadowsocks-setup/login.png)\n![](Shadowsocks-setup/login-server.png)\n在服务器中先选择安装系统，最好安装`centos-6 x86系统`，然后可以选择一件安装`Shadowsocks Serve`r,安装完之后会显示端口、密码等相关信息，这些信息是填写客户端（PC端）上面。\n## 客户端安装Shadowsocks\nwindows版安装就和平时安装软件一样，点击下一步就可以，安装完之后填写服务器、密码、端口号相关信息就可以了。\n下载地址：[官方下载页](https://github.com/shadowsocks/shadowsocks-windows/releases)\n![](Shadowsocks-setup/ss.png)\n","source":"_posts/Shadowsocks-setup.md","raw":"---\ntitle: Shadowsocks Setup\ndate: 2017-10-20 09:35:35\ncategories:\n- 技术\n- VPS Shadowsocks\ntags:\n- 技术\n- VPS Shadowsocks\n---\n\n# 搬瓦工服务器搭建与使用\n花费了一天的时间来搭建搬瓦工服务器一家Shadowsocks的配置，主要过程为：\n- 购买 [搬瓦工服务器](https://bandwagonhost.com/) [国内镜像网站](http://banwagong.cn/)!\n- 在服务器上使用一键安装Shadowsocks功能\n- 客户端上安装Shadosocks软件\n\n<!-- more -->\n\n## 购买BandwagongHost（俗称搬瓦工）服务器\n![](Shadowsocks-setup/bang-website.png)\n购买时选择KVM架构的服务器，因为可以选择安装`centos-6-x86_64-bbr` 系统（默认安装，加速），同时还可以选择其他加速方式，两者的主要区别是：\nOpenVZ advantages:\n- IPv6 support\n- Better CPU performance\nKVM advantages:\n- Full virtualization\n- Custom kernel support (BBR, etc)\n- Docker support\n- Better isolation\n- Better network throughput\n![](Shadowsocks-setup/buy.png)\n点击购买就可以了,可以选择支付宝付款。购买成功之后会选择发送邮件到你注册时使用的邮箱中，具体信息可以登入到网站中查看\n![](Shadowsocks-setup/login.png)\n![](Shadowsocks-setup/login-server.png)\n在服务器中先选择安装系统，最好安装`centos-6 x86系统`，然后可以选择一件安装`Shadowsocks Serve`r,安装完之后会显示端口、密码等相关信息，这些信息是填写客户端（PC端）上面。\n## 客户端安装Shadowsocks\nwindows版安装就和平时安装软件一样，点击下一步就可以，安装完之后填写服务器、密码、端口号相关信息就可以了。\n下载地址：[官方下载页](https://github.com/shadowsocks/shadowsocks-windows/releases)\n![](Shadowsocks-setup/ss.png)\n","slug":"Shadowsocks-setup","published":1,"updated":"2017-12-31T07:15:02.717Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdfl37e6000az0tf7wvjkv66","content":"<h1 id=\"搬瓦工服务器搭建与使用\"><a href=\"#搬瓦工服务器搭建与使用\" class=\"headerlink\" title=\"搬瓦工服务器搭建与使用\"></a>搬瓦工服务器搭建与使用</h1><p>花费了一天的时间来搭建搬瓦工服务器一家Shadowsocks的配置，主要过程为：</p>\n<ul>\n<li>购买 <a href=\"https://bandwagonhost.com/\" target=\"_blank\" rel=\"noopener\">搬瓦工服务器</a> <a href=\"http://banwagong.cn/\" target=\"_blank\" rel=\"noopener\">国内镜像网站</a>!</li>\n<li>在服务器上使用一键安装Shadowsocks功能</li>\n<li>客户端上安装Shadosocks软件</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"购买BandwagongHost（俗称搬瓦工）服务器\"><a href=\"#购买BandwagongHost（俗称搬瓦工）服务器\" class=\"headerlink\" title=\"购买BandwagongHost（俗称搬瓦工）服务器\"></a>购买BandwagongHost（俗称搬瓦工）服务器</h2><p><img src=\"/2017/10/20/Shadowsocks-setup/bang-website.png\" alt=\"\"><br>购买时选择KVM架构的服务器，因为可以选择安装<code>centos-6-x86_64-bbr</code> 系统（默认安装，加速），同时还可以选择其他加速方式，两者的主要区别是：<br>OpenVZ advantages:</p>\n<ul>\n<li>IPv6 support</li>\n<li>Better CPU performance<br>KVM advantages:</li>\n<li>Full virtualization</li>\n<li>Custom kernel support (BBR, etc)</li>\n<li>Docker support</li>\n<li>Better isolation</li>\n<li>Better network throughput<br><img src=\"/2017/10/20/Shadowsocks-setup/buy.png\" alt=\"\"><br>点击购买就可以了,可以选择支付宝付款。购买成功之后会选择发送邮件到你注册时使用的邮箱中，具体信息可以登入到网站中查看<br><img src=\"/2017/10/20/Shadowsocks-setup/login.png\" alt=\"\"><br><img src=\"/2017/10/20/Shadowsocks-setup/login-server.png\" alt=\"\"><br>在服务器中先选择安装系统，最好安装<code>centos-6 x86系统</code>，然后可以选择一件安装<code>Shadowsocks Serve</code>r,安装完之后会显示端口、密码等相关信息，这些信息是填写客户端（PC端）上面。<h2 id=\"客户端安装Shadowsocks\"><a href=\"#客户端安装Shadowsocks\" class=\"headerlink\" title=\"客户端安装Shadowsocks\"></a>客户端安装Shadowsocks</h2>windows版安装就和平时安装软件一样，点击下一步就可以，安装完之后填写服务器、密码、端口号相关信息就可以了。<br>下载地址：<a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"noopener\">官方下载页</a><br><img src=\"/2017/10/20/Shadowsocks-setup/ss.png\" alt=\"\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"搬瓦工服务器搭建与使用\"><a href=\"#搬瓦工服务器搭建与使用\" class=\"headerlink\" title=\"搬瓦工服务器搭建与使用\"></a>搬瓦工服务器搭建与使用</h1><p>花费了一天的时间来搭建搬瓦工服务器一家Shadowsocks的配置，主要过程为：</p>\n<ul>\n<li>购买 <a href=\"https://bandwagonhost.com/\" target=\"_blank\" rel=\"noopener\">搬瓦工服务器</a> <a href=\"http://banwagong.cn/\" target=\"_blank\" rel=\"noopener\">国内镜像网站</a>!</li>\n<li>在服务器上使用一键安装Shadowsocks功能</li>\n<li>客户端上安装Shadosocks软件</li>\n</ul>","more":"<h2 id=\"购买BandwagongHost（俗称搬瓦工）服务器\"><a href=\"#购买BandwagongHost（俗称搬瓦工）服务器\" class=\"headerlink\" title=\"购买BandwagongHost（俗称搬瓦工）服务器\"></a>购买BandwagongHost（俗称搬瓦工）服务器</h2><p><img src=\"/2017/10/20/Shadowsocks-setup/bang-website.png\" alt=\"\"><br>购买时选择KVM架构的服务器，因为可以选择安装<code>centos-6-x86_64-bbr</code> 系统（默认安装，加速），同时还可以选择其他加速方式，两者的主要区别是：<br>OpenVZ advantages:</p>\n<ul>\n<li>IPv6 support</li>\n<li>Better CPU performance<br>KVM advantages:</li>\n<li>Full virtualization</li>\n<li>Custom kernel support (BBR, etc)</li>\n<li>Docker support</li>\n<li>Better isolation</li>\n<li>Better network throughput<br><img src=\"/2017/10/20/Shadowsocks-setup/buy.png\" alt=\"\"><br>点击购买就可以了,可以选择支付宝付款。购买成功之后会选择发送邮件到你注册时使用的邮箱中，具体信息可以登入到网站中查看<br><img src=\"/2017/10/20/Shadowsocks-setup/login.png\" alt=\"\"><br><img src=\"/2017/10/20/Shadowsocks-setup/login-server.png\" alt=\"\"><br>在服务器中先选择安装系统，最好安装<code>centos-6 x86系统</code>，然后可以选择一件安装<code>Shadowsocks Serve</code>r,安装完之后会显示端口、密码等相关信息，这些信息是填写客户端（PC端）上面。<h2 id=\"客户端安装Shadowsocks\"><a href=\"#客户端安装Shadowsocks\" class=\"headerlink\" title=\"客户端安装Shadowsocks\"></a>客户端安装Shadowsocks</h2>windows版安装就和平时安装软件一样，点击下一步就可以，安装完之后填写服务器、密码、端口号相关信息就可以了。<br>下载地址：<a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"noopener\">官方下载页</a><br><img src=\"/2017/10/20/Shadowsocks-setup/ss.png\" alt=\"\"></li>\n</ul>"},{"title":"Windows 下使用tree命令生成目录树","date":"2018-01-29T10:23:48.000Z","_content":"\n# 了解\n\n在看[Vue.js](https://cn.vuejs.org/v2/guide/instance.html)的官方文档时，看到了这样的目录图，当时就好奇这是怎么写出来的，是由专门的语法还是通过手打出来的，于是就上网查找，发现原来这是通过`tree`命令来实现。\n![](./Windows-tree/todo-item.png)\n\n<!--more-->\n\n# 查找\n\ntree命令格式:\n`TREE [drive:][path] [/F] [/A]`\n> /F 显示每个文件夹中文件的名称。使用时显示所有目录及目录下的所有文件，省略时，只显示目录，不显示目录下的文件;\n> /A 使用 ASCII 字符，而不使用扩展字符。\n\n在 `Linux` 和 `Mac OS` 系统中tree命令有更强大的功能，但在Windows下只有 `/F` `/A`\n\n# 实践\n\nOK，Let's do it now ! :smile:\n首先，建立相关的测试文件夹\n![](./Windows-tree/tree-file.png)\n然后在DOS中进入目录 `E:\\test>`\n输入相关命令，你可以选择在DOS中直接显示，也可以存为txt文件\n```\ntree /f              // 直接显示\ntree /f > tree.txt   // 存为txt文件\n```\n结果：\n![](./Windows-tree/tree-txt.png)\n之后就可以复制其中的内容了 \n```\n└─ToDoList\n    ├─ToDoItem\n    │  ├─DeleteToDoButton\n    │  └─EditToDoButton\n    └─ToDoListFooter\n        ├─ClearToDoButton\n        └─ToDoListStatistics\n```","source":"_posts/Windows-tree.md","raw":"---\ntitle: Windows 下使用tree命令生成目录树\ndate: 2018-01-29 18:23:48\ncategories:\n- 技术\n- Windows\ntags:\n- windows\n- tree\n---\n\n# 了解\n\n在看[Vue.js](https://cn.vuejs.org/v2/guide/instance.html)的官方文档时，看到了这样的目录图，当时就好奇这是怎么写出来的，是由专门的语法还是通过手打出来的，于是就上网查找，发现原来这是通过`tree`命令来实现。\n![](./Windows-tree/todo-item.png)\n\n<!--more-->\n\n# 查找\n\ntree命令格式:\n`TREE [drive:][path] [/F] [/A]`\n> /F 显示每个文件夹中文件的名称。使用时显示所有目录及目录下的所有文件，省略时，只显示目录，不显示目录下的文件;\n> /A 使用 ASCII 字符，而不使用扩展字符。\n\n在 `Linux` 和 `Mac OS` 系统中tree命令有更强大的功能，但在Windows下只有 `/F` `/A`\n\n# 实践\n\nOK，Let's do it now ! :smile:\n首先，建立相关的测试文件夹\n![](./Windows-tree/tree-file.png)\n然后在DOS中进入目录 `E:\\test>`\n输入相关命令，你可以选择在DOS中直接显示，也可以存为txt文件\n```\ntree /f              // 直接显示\ntree /f > tree.txt   // 存为txt文件\n```\n结果：\n![](./Windows-tree/tree-txt.png)\n之后就可以复制其中的内容了 \n```\n└─ToDoList\n    ├─ToDoItem\n    │  ├─DeleteToDoButton\n    │  └─EditToDoButton\n    └─ToDoListFooter\n        ├─ClearToDoButton\n        └─ToDoListStatistics\n```","slug":"Windows-tree","published":1,"updated":"2018-02-09T03:40:58.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdfl37ea000dz0tfo2o1u4fe","content":"<h1 id=\"了解\"><a href=\"#了解\" class=\"headerlink\" title=\"了解\"></a>了解</h1><p>在看<a href=\"https://cn.vuejs.org/v2/guide/instance.html\" target=\"_blank\" rel=\"noopener\">Vue.js</a>的官方文档时，看到了这样的目录图，当时就好奇这是怎么写出来的，是由专门的语法还是通过手打出来的，于是就上网查找，发现原来这是通过<code>tree</code>命令来实现。<br><img src=\"/2018/01/29/Windows-tree/todo-item.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h1 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h1><p>tree命令格式:<br><code>TREE [drive:][path] [/F] [/A]</code></p>\n<blockquote>\n<p>/F 显示每个文件夹中文件的名称。使用时显示所有目录及目录下的所有文件，省略时，只显示目录，不显示目录下的文件;<br>/A 使用 ASCII 字符，而不使用扩展字符。</p>\n</blockquote>\n<p>在 <code>Linux</code> 和 <code>Mac OS</code> 系统中tree命令有更强大的功能，但在Windows下只有 <code>/F</code> <code>/A</code></p>\n<h1 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h1><p>OK，Let’s do it now ! <span class=\"github-emoji\" title=\"smile\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png?v7\">&#x1f604;</span><br>首先，建立相关的测试文件夹<br><img src=\"/2018/01/29/Windows-tree/tree-file.png\" alt=\"\"><br>然后在DOS中进入目录 <code>E:\\test&gt;</code><br>输入相关命令，你可以选择在DOS中直接显示，也可以存为txt文件<br><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">tree</span> /f              <span class=\"comment\">// 直接显示</span></span><br><span class=\"line\"><span class=\"keyword\">tree</span> /f &gt; <span class=\"keyword\">tree</span>.txt   <span class=\"comment\">// 存为txt文件</span></span><br></pre></td></tr></table></figure></p>\n<p>结果：<br><img src=\"/2018/01/29/Windows-tree/tree-txt.png\" alt=\"\"><br>之后就可以复制其中的内容了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─ToDoList</span><br><span class=\"line\">    ├─ToDoItem</span><br><span class=\"line\">    │  ├─DeleteToDoButton</span><br><span class=\"line\">    │  └─EditToDoButton</span><br><span class=\"line\">    └─ToDoListFooter</span><br><span class=\"line\">        ├─ClearToDoButton</span><br><span class=\"line\">        └─ToDoListStatistics</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"了解\"><a href=\"#了解\" class=\"headerlink\" title=\"了解\"></a>了解</h1><p>在看<a href=\"https://cn.vuejs.org/v2/guide/instance.html\" target=\"_blank\" rel=\"noopener\">Vue.js</a>的官方文档时，看到了这样的目录图，当时就好奇这是怎么写出来的，是由专门的语法还是通过手打出来的，于是就上网查找，发现原来这是通过<code>tree</code>命令来实现。<br><img src=\"/2018/01/29/Windows-tree/todo-item.png\" alt=\"\"></p>","more":"<h1 id=\"查找\"><a href=\"#查找\" class=\"headerlink\" title=\"查找\"></a>查找</h1><p>tree命令格式:<br><code>TREE [drive:][path] [/F] [/A]</code></p>\n<blockquote>\n<p>/F 显示每个文件夹中文件的名称。使用时显示所有目录及目录下的所有文件，省略时，只显示目录，不显示目录下的文件;<br>/A 使用 ASCII 字符，而不使用扩展字符。</p>\n</blockquote>\n<p>在 <code>Linux</code> 和 <code>Mac OS</code> 系统中tree命令有更强大的功能，但在Windows下只有 <code>/F</code> <code>/A</code></p>\n<h1 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h1><p>OK，Let’s do it now ! <span class=\"github-emoji\" title=\"smile\" data-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png?v7\">&#x1f604;</span><br>首先，建立相关的测试文件夹<br><img src=\"/2018/01/29/Windows-tree/tree-file.png\" alt=\"\"><br>然后在DOS中进入目录 <code>E:\\test&gt;</code><br>输入相关命令，你可以选择在DOS中直接显示，也可以存为txt文件<br><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">tree</span> /f              <span class=\"comment\">// 直接显示</span></span><br><span class=\"line\"><span class=\"keyword\">tree</span> /f &gt; <span class=\"keyword\">tree</span>.txt   <span class=\"comment\">// 存为txt文件</span></span><br></pre></td></tr></table></figure></p>\n<p>结果：<br><img src=\"/2018/01/29/Windows-tree/tree-txt.png\" alt=\"\"><br>之后就可以复制其中的内容了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└─ToDoList</span><br><span class=\"line\">    ├─ToDoItem</span><br><span class=\"line\">    │  ├─DeleteToDoButton</span><br><span class=\"line\">    │  └─EditToDoButton</span><br><span class=\"line\">    └─ToDoListFooter</span><br><span class=\"line\">        ├─ClearToDoButton</span><br><span class=\"line\">        └─ToDoListStatistics</span><br></pre></td></tr></table></figure></p>"}],"PostAsset":[{"_id":"source/_posts/Http-Chapter-1/HTTP-TCPIP-DNS.png","slug":"HTTP-TCPIP-DNS.png","post":"cjdfl37dk0003z0tfngkjkb90","modified":1,"renderable":0},{"_id":"source/_posts/Hello-Hexo/github-desktop-use.png","slug":"github-desktop-use.png","post":"cjdfl37db0001z0tf6rhyst2e","modified":1,"renderable":0},{"_id":"source/_posts/Http-Chapter-2/HTTP-URI.png","slug":"HTTP-URI.png","post":"cjdfl37ds0007z0tft9g2xgpf","modified":1,"renderable":0},{"_id":"source/_posts/Windows-tree/todo-item.png","post":"cjdfl37ea000dz0tfo2o1u4fe","slug":"todo-item.png","modified":1,"renderable":1},{"_id":"source/_posts/Windows-tree/tree-file.png","post":"cjdfl37ea000dz0tfo2o1u4fe","slug":"tree-file.png","modified":1,"renderable":1},{"_id":"source/_posts/Windows-tree/tree-txt.png","post":"cjdfl37ea000dz0tfo2o1u4fe","slug":"tree-txt.png","modified":1,"renderable":1},{"_id":"source/_posts/Shadowsocks-setup/bang-website.png","post":"cjdfl37e6000az0tf7wvjkv66","slug":"bang-website.png","modified":1,"renderable":1},{"_id":"source/_posts/Shadowsocks-setup/buy.png","post":"cjdfl37e6000az0tf7wvjkv66","slug":"buy.png","modified":1,"renderable":1},{"_id":"source/_posts/Shadowsocks-setup/login-server.png","post":"cjdfl37e6000az0tf7wvjkv66","slug":"login-server.png","modified":1,"renderable":1},{"_id":"source/_posts/Shadowsocks-setup/login.png","post":"cjdfl37e6000az0tf7wvjkv66","slug":"login.png","modified":1,"renderable":1},{"_id":"source/_posts/Shadowsocks-setup/ss.png","post":"cjdfl37e6000az0tf7wvjkv66","slug":"ss.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/git-test.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"git-test.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/github-create.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"github-create.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/github-desktop.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"github-desktop.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/github-new.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"github-new.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/hexo-file.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"hexo-file.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/hexo-use.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"hexo-use.png","modified":1,"renderable":1},{"_id":"source/_posts/Hello-Hexo/node-test.png","post":"cjdfl37db0001z0tf6rhyst2e","slug":"node-test.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/DNS.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"DNS.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/IP.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"IP.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/TCP-IP-2.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"TCP-IP-2.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/TCP-IP.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"TCP-IP.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/TCP.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"TCP.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/URI.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"URI.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-1/web.png","post":"cjdfl37dk0003z0tfngkjkb90","slug":"web.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/CONNECT.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"CONNECT.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/DELETE.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"DELETE.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/GET.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"GET.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/HEAD.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"HEAD.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/HTTP-Persistent-Connections.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"HTTP-Persistent-Connections.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/HTTP-TCP-2.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"HTTP-TCP-2.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/HTTP-TCP.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"HTTP-TCP.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/POST.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"POST.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/PUT.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"PUT.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/TRACE-1.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"TRACE-1.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/TRACE-2.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"TRACE-2.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/answer.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"answer.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/options.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"options.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/pipelining.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"pipelining.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/request-URI-2.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"request-URI-2.png","modified":1,"renderable":1},{"_id":"source/_posts/Http-Chapter-2/request-URI.png","post":"cjdfl37ds0007z0tft9g2xgpf","slug":"request-URI.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjdfl37db0001z0tf6rhyst2e","category_id":"cjdfl37dq0005z0tfxthnrk1i","_id":"cjdfl37ec000ez0tf7f5basip"},{"post_id":"cjdfl37e6000az0tf7wvjkv66","category_id":"cjdfl37em000lz0tf7w01shon","_id":"cjdfl37f00015z0tfug6na5em"},{"post_id":"cjdfl37e6000az0tf7wvjkv66","category_id":"cjdfl37ew0010z0tfzs98mo8g","_id":"cjdfl37f10018z0tfrzaoc5b2"},{"post_id":"cjdfl37ea000dz0tfo2o1u4fe","category_id":"cjdfl37em000lz0tf7w01shon","_id":"cjdfl37f2001bz0tfasutnfn6"},{"post_id":"cjdfl37ea000dz0tfo2o1u4fe","category_id":"cjdfl37ez0013z0tfglj0thx2","_id":"cjdfl37f4001fz0tfs69n49qo"},{"post_id":"cjdfl37dk0003z0tfngkjkb90","category_id":"cjdfl37e7000bz0tf4axjj0hk","_id":"cjdfl37f5001hz0tffdyo706b"},{"post_id":"cjdfl37dk0003z0tfngkjkb90","category_id":"cjdfl37ep000qz0tf3ghadvzb","_id":"cjdfl37f5001jz0tflz5srkrk"},{"post_id":"cjdfl37dk0003z0tfngkjkb90","category_id":"cjdfl37f00016z0tf9tzw9wu3","_id":"cjdfl37f6001lz0tfpot0f364"},{"post_id":"cjdfl37ds0007z0tft9g2xgpf","category_id":"cjdfl37e7000bz0tf4axjj0hk","_id":"cjdfl37f7001oz0tfgch6ycf0"},{"post_id":"cjdfl37ds0007z0tft9g2xgpf","category_id":"cjdfl37ep000qz0tf3ghadvzb","_id":"cjdfl37f7001pz0tfdykisuyt"},{"post_id":"cjdfl37ds0007z0tft9g2xgpf","category_id":"cjdfl37f00016z0tf9tzw9wu3","_id":"cjdfl37f8001qz0tf5l5gymkp"},{"post_id":"cjdfl37e10009z0tfp4wf8d43","category_id":"cjdfl37e7000bz0tf4axjj0hk","_id":"cjdfl37f9001sz0tfqaq3wd91"},{"post_id":"cjdfl37e10009z0tfp4wf8d43","category_id":"cjdfl37es000wz0tfollt9a3j","_id":"cjdfl37fa001uz0tf3rupya5v"},{"post_id":"cjdfl37e10009z0tfp4wf8d43","category_id":"cjdfl37f4001gz0tfofda02yk","_id":"cjdfl37fa001vz0tf7h0soodw"}],"PostTag":[{"post_id":"cjdfl37db0001z0tf6rhyst2e","tag_id":"cjdfl37ds0006z0tf7etxytpi","_id":"cjdfl37ei000hz0tfzuw1u86i"},{"post_id":"cjdfl37db0001z0tf6rhyst2e","tag_id":"cjdfl37e7000cz0tftj9kzsrs","_id":"cjdfl37ej000iz0tfrjuflhy3"},{"post_id":"cjdfl37dk0003z0tfngkjkb90","tag_id":"cjdfl37ed000gz0tfi55jvsdh","_id":"cjdfl37eo000pz0tfx7kc7zoq"},{"post_id":"cjdfl37dk0003z0tfngkjkb90","tag_id":"cjdfl37el000kz0tfspvna64r","_id":"cjdfl37ep000rz0tfct7r9zci"},{"post_id":"cjdfl37dk0003z0tfngkjkb90","tag_id":"cjdfl37em000mz0tfnos7fg26","_id":"cjdfl37eq000tz0tfowezpdz3"},{"post_id":"cjdfl37ds0007z0tft9g2xgpf","tag_id":"cjdfl37ed000gz0tfi55jvsdh","_id":"cjdfl37eu000yz0tfp40ri3l4"},{"post_id":"cjdfl37ds0007z0tft9g2xgpf","tag_id":"cjdfl37el000kz0tfspvna64r","_id":"cjdfl37ev000zz0tf8d0z0piw"},{"post_id":"cjdfl37ds0007z0tft9g2xgpf","tag_id":"cjdfl37em000mz0tfnos7fg26","_id":"cjdfl37ey0012z0tf1i5ejhmy"},{"post_id":"cjdfl37e10009z0tfp4wf8d43","tag_id":"cjdfl37ed000gz0tfi55jvsdh","_id":"cjdfl37f10019z0tfjdzam342"},{"post_id":"cjdfl37e10009z0tfp4wf8d43","tag_id":"cjdfl37ew0011z0tfiko4nnwh","_id":"cjdfl37f2001az0tf03dr1jw3"},{"post_id":"cjdfl37e10009z0tfp4wf8d43","tag_id":"cjdfl37ez0014z0tfqtgmay4k","_id":"cjdfl37f3001ez0tfvwqv7655"},{"post_id":"cjdfl37e6000az0tf7wvjkv66","tag_id":"cjdfl37f10017z0tfbvkon4i4","_id":"cjdfl37f6001kz0tfxjxij1ye"},{"post_id":"cjdfl37e6000az0tf7wvjkv66","tag_id":"cjdfl37f3001dz0tf1gzbp58m","_id":"cjdfl37f6001mz0tftamjcnpm"},{"post_id":"cjdfl37ea000dz0tfo2o1u4fe","tag_id":"cjdfl37f5001iz0tfrcoy2z38","_id":"cjdfl37f8001rz0tftu5q7s5j"},{"post_id":"cjdfl37ea000dz0tfo2o1u4fe","tag_id":"cjdfl37f7001nz0tfulqjhq68","_id":"cjdfl37f9001tz0tfs97fil3f"}],"Tag":[{"name":"建站","_id":"cjdfl37ds0006z0tf7etxytpi"},{"name":"Hexo","_id":"cjdfl37e7000cz0tftj9kzsrs"},{"name":"Web","_id":"cjdfl37ed000gz0tfi55jvsdh"},{"name":"HTTP","_id":"cjdfl37el000kz0tfspvna64r"},{"name":"学习笔记","_id":"cjdfl37em000mz0tfnos7fg26"},{"name":"前端","_id":"cjdfl37ew0011z0tfiko4nnwh"},{"name":"JavaScript","_id":"cjdfl37ez0014z0tfqtgmay4k"},{"name":"技术","_id":"cjdfl37f10017z0tfbvkon4i4"},{"name":"VPS Shadowsocks","_id":"cjdfl37f3001dz0tf1gzbp58m"},{"name":"windows","_id":"cjdfl37f5001iz0tfrcoy2z38"},{"name":"tree","_id":"cjdfl37f7001nz0tfulqjhq68"}]}}